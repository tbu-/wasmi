var searchIndex = {};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For `std::io`.)",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For `std::io`.)",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,null],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,null],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,null],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,null],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,null],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,null],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,null],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,null],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,null],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.",2,null],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,null],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,null],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,null],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,null],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,null],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,null],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,null],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,null],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,null],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,null],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,null],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,null],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,null],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,null],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,null],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,null],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,null],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,null],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,null],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,null],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,null],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,null],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,null],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,null],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,null],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,null],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,null],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,null],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,null],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,null],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,null],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,null],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,null],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,null],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,null],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,null],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"bigendian"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",3,null],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"ordering"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"bigendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"default","","",3,{"o":{"n":"bigendian"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"littleendian"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"ordering"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"littleendian"}],"o":{"g":["ordering"],"n":"option"}}],[11,"default","","",4,{"o":{"n":"littleendian"}}],[11,"read_u16","","",3,null],[11,"read_u32","","",3,null],[11,"read_u64","","",3,null],[11,"read_uint","","",3,null],[11,"write_u16","","",3,null],[11,"write_u32","","",3,null],[11,"write_u64","","",3,null],[11,"write_uint","","",3,null],[11,"read_u16_into","","",3,null],[11,"read_u32_into","","",3,null],[11,"read_u64_into","","",3,null],[11,"write_u16_into","","",3,null],[11,"write_u32_into","","",3,null],[11,"write_u64_into","","",3,null],[11,"from_slice_u16","","",3,null],[11,"from_slice_u32","","",3,null],[11,"from_slice_u64","","",3,null],[11,"from_slice_f32","","",3,null],[11,"from_slice_f64","","",3,null],[11,"read_u16","","",4,null],[11,"read_u32","","",4,null],[11,"read_u64","","",4,null],[11,"read_uint","","",4,null],[11,"write_u16","","",4,null],[11,"write_u32","","",4,null],[11,"write_u64","","",4,null],[11,"write_uint","","",4,null],[11,"read_u16_into","","",4,null],[11,"read_u32_into","","",4,null],[11,"read_u64_into","","",4,null],[11,"write_u16_into","","",4,null],[11,"write_u32_into","","",4,null],[11,"write_u64_into","","",4,null],[11,"from_slice_u16","","",4,null],[11,"from_slice_u32","","",4,null],[11,"from_slice_u64","","",4,null],[11,"from_slice_f32","","",4,null],[11,"from_slice_f64","","",4,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u8"],"n":"result"}}],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i8"],"n":"result"}}],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u16"],"n":"result"}}],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i16"],"n":"result"}}],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["u64"],"n":"result"}}],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["i64"],"n":"result"}}],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f32"],"n":"result"}}],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,{"i":[{"n":"self"}],"o":{"g":["f64"],"n":"result"}}],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,null],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,null],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,null],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,null],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,null],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,null],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f32_into_unchecked","","DEPRECATED.",0,null],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,null],[11,"read_f64_into_unchecked","","DEPRECATED.",0,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u8"}],"o":{"n":"result"}}],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i8"}],"o":{"n":"result"}}],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u16"}],"o":{"n":"result"}}],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i16"}],"o":{"n":"result"}}],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"result"}}],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i32"}],"o":{"n":"result"}}],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"}],"o":{"n":"result"}}],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"}],"o":{"n":"result"}}],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"u64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,{"i":[{"n":"self"},{"n":"i64"},{"n":"usize"}],"o":{"n":"result"}}],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f32"}],"o":{"n":"result"}}],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,{"i":[{"n":"self"},{"n":"f64"}],"o":{"n":"result"}}]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["instantiate"] = {"doc":"Handy utility to test whether the given module deserializes, validates and instantiates successfully.","items":[],"paths":[]};
searchIndex["memory_units"] = {"doc":"Crate for safe conversion between units of memory.","items":[[3,"Bytes","memory_units","Memory size specified in bytes.",null,null],[12,"0","","",0,null],[5,"size_of","","Returns the size of a type in [`Bytes`].",null,{"o":{"n":"bytes"}}],[0,"wasm32","","WebAssembly-specific sizes and units.",null,null],[3,"Words","memory_units::wasm32","Memory size specified in `wasm32` words.",null,null],[12,"0","","",1,null],[3,"Pages","","Memory size specified in WebAssembly [memory pages][memory page].",null,null],[12,"0","","",2,null],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"words"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"ne","","",1,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"words"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",1,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"le","","",1,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"gt","","",1,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"ge","","",1,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"cmp","","",1,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"ordering"}}],[11,"byte_size","","",1,{"o":{"n":"bytes"}}],[11,"from","memory_units","",0,{"i":[{"n":"words"}],"o":{"n":"bytes"}}],[11,"add","memory_units::wasm32","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"sub","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"mul","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"div","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"pages"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",2,{"i":[{"n":"self"},{"n":"pages"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",2,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"le","","",2,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"gt","","",2,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"ge","","",2,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"cmp","","",2,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"ordering"}}],[11,"byte_size","","",2,{"o":{"n":"bytes"}}],[11,"from","memory_units","",0,{"i":[{"n":"pages"}],"o":{"n":"bytes"}}],[11,"add","memory_units::wasm32","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"sub","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"mul","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"div","","",2,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[0,"target","memory_units","Sizes and units for the current compilation target.",null,null],[3,"Words","memory_units::target","Memory size specified in words.",null,null],[12,"0","","",3,null],[3,"Pages","","Memory size specified in [memory pages][memory page].",null,null],[12,"0","","",4,null],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"words"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",3,{"i":[{"n":"self"},{"n":"words"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",3,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"le","","",3,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"gt","","",3,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"ge","","",3,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"cmp","","",3,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"ordering"}}],[11,"byte_size","","",3,{"o":{"n":"bytes"}}],[11,"from","memory_units","",0,{"i":[{"n":"words"}],"o":{"n":"bytes"}}],[11,"add","memory_units::target","",3,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"sub","","",3,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"mul","","",3,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"div","","",3,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"pages"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",4,{"i":[{"n":"self"},{"n":"pages"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",4,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"le","","",4,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"gt","","",4,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"ge","","",4,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"cmp","","",4,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"ordering"}}],[11,"byte_size","","",4,{"o":{"n":"bytes"}}],[11,"from","memory_units","",0,{"i":[{"n":"pages"}],"o":{"n":"bytes"}}],[11,"add","memory_units::target","",4,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"sub","","",4,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"mul","","",4,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"div","","",4,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[8,"RoundUpTo","memory_units","A trait defining round up conversion between various memory units.",null,null],[10,"round_up_to","","Returns minimum number of `T` to fit amount of space occupied by `self`.",5,{"i":[{"n":"self"}],"o":{"n":"t"}}],[8,"ByteSize","","A trait defining the size, in bytes, of one unit of `Self`.",null,null],[10,"byte_size","","The size, in bytes, of a single unit of `Self`.",6,{"o":{"n":"bytes"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"bytes"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"ne","","",0,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",0,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"le","","",0,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"gt","","",0,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"ge","","",0,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"cmp","","",0,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"ordering"}}],[11,"byte_size","","",0,{"o":{"n":"bytes"}}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"mul","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"div","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}]],"paths":[[3,"Bytes"],[3,"Words"],[3,"Pages"],[3,"Words"],[3,"Pages"],[8,"RoundUpTo"],[8,"ByteSize"]]};
searchIndex["nan_preserving_float"] = {"doc":"","items":[[3,"F32","nan_preserving_float","",null,null],[3,"F64","","",null,null],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"add","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"sub","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"mul","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"div","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"rem","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"from_bits","","",0,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[11,"to_bits","","",0,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_float","","",0,{"i":[{"n":"f32"}],"o":{"n":"self"}}],[11,"to_float","","",0,{"i":[{"n":"self"}],"o":{"n":"f32"}}],[11,"is_nan","","",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"abs","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fract","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"min","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"max","","",0,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"from","","",0,{"i":[{"n":"f32"}],"o":{"n":"f32"}}],[11,"neg","","",0,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",0,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["ordering"],"n":"option"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"add","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"sub","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"mul","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"div","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"rem","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"self"}}],[11,"from_bits","","",1,{"i":[{"n":"u64"}],"o":{"n":"self"}}],[11,"to_bits","","",1,{"i":[{"n":"self"}],"o":{"n":"u64"}}],[11,"from_float","","",1,{"i":[{"n":"f64"}],"o":{"n":"self"}}],[11,"to_float","","",1,{"i":[{"n":"self"}],"o":{"n":"f64"}}],[11,"is_nan","","",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"abs","","",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fract","","",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"min","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"max","","",1,{"i":[{"n":"self"},{"n":"self"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"f64"}],"o":{"n":"f64"}}],[11,"neg","","",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",1,{"i":[{"n":"self"},{"n":"t"}],"o":{"g":["ordering"],"n":"option"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",0,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"u64"}],"o":{"n":"self"}}]],"paths":[[3,"F32"],[3,"F64"]]};
searchIndex["parity_wasm"] = {"doc":"WebAssembly format library","items":[[5,"peek_size","parity_wasm","Returns size of the module in the provided stream",null,null],[0,"elements","","Elements of the WebAssembly binary format.",null,null],[3,"Module","parity_wasm::elements","WebAssembly module",null,null],[3,"FunctionSection","","Section with function signatures definition.",null,null],[3,"CodeSection","","Section with function bodies of the module.",null,null],[3,"MemorySection","","Section with table definition (currently only one entry is allowed).",null,null],[3,"DataSection","","Data entries definitions.",null,null],[3,"ImportSection","","Section of the imports definition.",null,null],[3,"ExportSection","","List of exports definition.",null,null],[3,"GlobalSection","","Globals definition section.",null,null],[3,"TypeSection","","Section with type declarations",null,null],[3,"ElementSection","","Element entries section.",null,null],[3,"TableSection","","Section with table definition (currently only one is allowed).",null,null],[3,"CustomSection","","Custom section",null,null],[3,"ImportEntry","","Import entry.",null,null],[3,"ResizableLimits","","Memory limits",null,null],[3,"MemoryType","","Memory entry.",null,null],[3,"TableType","","Table entry",null,null],[3,"GlobalType","","Global definition struct",null,null],[3,"ExportEntry","","Export entry.",null,null],[3,"GlobalEntry","","Global entry in the module.",null,null],[3,"VarUint32","","Unsigned variable-length integer, limited to 32 bits, represented by at most 5 bytes that may contain padding 0x80 bytes.",null,null],[3,"VarUint7","","7-bit unsigned integer, encoded in LEB128 (always 1 byte length)",null,null],[3,"Uint8","","8-bit unsigned integer, NOT encoded in LEB128; it's just a single byte.",null,null],[3,"VarUint1","","VarUint1, 1-bit value (0/1)",null,null],[3,"VarInt7","","7-bit signed integer, encoded in LEB128 (always 1 byte length)",null,null],[3,"Uint32","","32-bit unsigned integer, encoded in little endian",null,null],[3,"VarInt32","","32-bit signed integer, encoded in LEB128 (can be 1-5 bytes length)",null,null],[3,"VarInt64","","64-bit signed integer, encoded in LEB128 (can be 1-9 bytes length)",null,null],[3,"Uint64","","64-bit unsigned integer, encoded in little endian",null,null],[3,"VarUint64","","Unsigned variable-length integer, limited to 64 bits, represented by at most 9 bytes that may contain padding 0x80 bytes.",null,null],[3,"CountedList","","List for reading sequence of elements typed `T`, given they are preceded by length (serialized as VarUint32)",null,null],[3,"CountedWriter","","Helper struct to write payload which is preceded by it's own length in bytes.",null,null],[3,"CountedListWriter","","Helper struct to write series of `T` preceded by the length of the sequence serialized as VarUint32",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"FunctionType","","Function signature type.",null,null],[3,"Instructions","","List of instructions (usually inside a block section).",null,null],[3,"InitExpr","","Initialization expression.",null,null],[3,"Func","","Function signature (type reference)",null,null],[3,"FuncBody","","Function body definition.",null,null],[3,"Local","","Local definition inside the function body.",null,null],[3,"ElementSegment","","Entry in the element section.",null,null],[3,"DataSegment","","Data segment definition.",null,null],[3,"IndexMap","","A map from non-contiguous `u32` keys to values of type `T`, which is serialized and deserialized ascending order of the keys. Normally used for relative dense maps with occasional \"holes\", and stored as an array.",null,null],[3,"ModuleNameSection","","The name of this module.",null,null],[3,"FunctionNameSection","","The names of the functions in this module.",null,null],[3,"LocalNameSection","","The names of the local variables in this module's functions.",null,null],[3,"RelocSection","","Relocation information.",null,null],[3,"Unparsed","","Unparsed part of the module/section",null,null],[12,"0","","",1,null],[4,"ImportCountType","","Type of the import entry to count",null,null],[13,"Function","","Count functions",2,null],[13,"Global","","Count globals",2,null],[13,"Table","","Count tables",2,null],[13,"Memory","","Count memories",2,null],[4,"Section","","Section in the WebAssembly module.",null,null],[13,"Unparsed","","Section is unparsed.",3,null],[12,"id","parity_wasm::elements::Section","id of the unparsed section",3,null],[12,"payload","","raw bytes of the unparsed section",3,null],[13,"Custom","parity_wasm::elements","Custom section (`id=0`)",3,null],[13,"Type","","Types section",3,null],[13,"Import","","Import section",3,null],[13,"Function","","Function signatures section",3,null],[13,"Table","","Table definition section",3,null],[13,"Memory","","Memory definition section",3,null],[13,"Global","","Global entries section",3,null],[13,"Export","","Export definitions",3,null],[13,"Start","","Entry reference of the module",3,null],[13,"Element","","Elements section",3,null],[13,"Code","","Function bodies section",3,null],[13,"Data","","Data definition section",3,null],[13,"Name","","Name section.",3,null],[13,"Reloc","","Relocation section.",3,null],[4,"External","","External to local binding.",null,null],[13,"Function","","Binds to function with index.",4,null],[13,"Table","","Describes local table definition to be imported as.",4,null],[13,"Memory","","Describes local memory definition to be imported as.",4,null],[13,"Global","","Describes local global entry to be imported as.",4,null],[4,"Internal","","Internal reference of the exported entry.",null,null],[13,"Function","","Function reference.",5,null],[13,"Table","","Table reference.",5,null],[13,"Memory","","Memory reference.",5,null],[13,"Global","","Global reference.",5,null],[4,"Type","","Type definition in types section. Currently can be only of the function type.",null,null],[13,"Function","","Function type.",6,null],[4,"ValueType","","Value type.",null,null],[13,"I32","","32-bit signed integer",7,null],[13,"I64","","64-bit signed integer",7,null],[13,"F32","","32-bit float",7,null],[13,"F64","","64-bit float",7,null],[4,"BlockType","","Block type which is basically `ValueType` + NoResult (to define blocks that have no return type)",null,null],[13,"Value","","Value-type specified block type",8,null],[13,"NoResult","","No specified block type",8,null],[4,"TableElementType","","Table element type.",null,null],[13,"AnyFunc","","A reference to a function with any signature.",9,null],[4,"Instruction","","Instruction",null,null],[13,"Unreachable","","",10,null],[13,"Nop","","",10,null],[13,"Block","","",10,null],[13,"Loop","","",10,null],[13,"If","","",10,null],[13,"Else","","",10,null],[13,"End","","",10,null],[13,"Br","","",10,null],[13,"BrIf","","",10,null],[13,"BrTable","","",10,null],[13,"Return","","",10,null],[13,"Call","","",10,null],[13,"CallIndirect","","",10,null],[13,"Drop","","",10,null],[13,"Select","","",10,null],[13,"GetLocal","","",10,null],[13,"SetLocal","","",10,null],[13,"TeeLocal","","",10,null],[13,"GetGlobal","","",10,null],[13,"SetGlobal","","",10,null],[13,"I32Load","","",10,null],[13,"I64Load","","",10,null],[13,"F32Load","","",10,null],[13,"F64Load","","",10,null],[13,"I32Load8S","","",10,null],[13,"I32Load8U","","",10,null],[13,"I32Load16S","","",10,null],[13,"I32Load16U","","",10,null],[13,"I64Load8S","","",10,null],[13,"I64Load8U","","",10,null],[13,"I64Load16S","","",10,null],[13,"I64Load16U","","",10,null],[13,"I64Load32S","","",10,null],[13,"I64Load32U","","",10,null],[13,"I32Store","","",10,null],[13,"I64Store","","",10,null],[13,"F32Store","","",10,null],[13,"F64Store","","",10,null],[13,"I32Store8","","",10,null],[13,"I32Store16","","",10,null],[13,"I64Store8","","",10,null],[13,"I64Store16","","",10,null],[13,"I64Store32","","",10,null],[13,"CurrentMemory","","",10,null],[13,"GrowMemory","","",10,null],[13,"I32Const","","",10,null],[13,"I64Const","","",10,null],[13,"F32Const","","",10,null],[13,"F64Const","","",10,null],[13,"I32Eqz","","",10,null],[13,"I32Eq","","",10,null],[13,"I32Ne","","",10,null],[13,"I32LtS","","",10,null],[13,"I32LtU","","",10,null],[13,"I32GtS","","",10,null],[13,"I32GtU","","",10,null],[13,"I32LeS","","",10,null],[13,"I32LeU","","",10,null],[13,"I32GeS","","",10,null],[13,"I32GeU","","",10,null],[13,"I64Eqz","","",10,null],[13,"I64Eq","","",10,null],[13,"I64Ne","","",10,null],[13,"I64LtS","","",10,null],[13,"I64LtU","","",10,null],[13,"I64GtS","","",10,null],[13,"I64GtU","","",10,null],[13,"I64LeS","","",10,null],[13,"I64LeU","","",10,null],[13,"I64GeS","","",10,null],[13,"I64GeU","","",10,null],[13,"F32Eq","","",10,null],[13,"F32Ne","","",10,null],[13,"F32Lt","","",10,null],[13,"F32Gt","","",10,null],[13,"F32Le","","",10,null],[13,"F32Ge","","",10,null],[13,"F64Eq","","",10,null],[13,"F64Ne","","",10,null],[13,"F64Lt","","",10,null],[13,"F64Gt","","",10,null],[13,"F64Le","","",10,null],[13,"F64Ge","","",10,null],[13,"I32Clz","","",10,null],[13,"I32Ctz","","",10,null],[13,"I32Popcnt","","",10,null],[13,"I32Add","","",10,null],[13,"I32Sub","","",10,null],[13,"I32Mul","","",10,null],[13,"I32DivS","","",10,null],[13,"I32DivU","","",10,null],[13,"I32RemS","","",10,null],[13,"I32RemU","","",10,null],[13,"I32And","","",10,null],[13,"I32Or","","",10,null],[13,"I32Xor","","",10,null],[13,"I32Shl","","",10,null],[13,"I32ShrS","","",10,null],[13,"I32ShrU","","",10,null],[13,"I32Rotl","","",10,null],[13,"I32Rotr","","",10,null],[13,"I64Clz","","",10,null],[13,"I64Ctz","","",10,null],[13,"I64Popcnt","","",10,null],[13,"I64Add","","",10,null],[13,"I64Sub","","",10,null],[13,"I64Mul","","",10,null],[13,"I64DivS","","",10,null],[13,"I64DivU","","",10,null],[13,"I64RemS","","",10,null],[13,"I64RemU","","",10,null],[13,"I64And","","",10,null],[13,"I64Or","","",10,null],[13,"I64Xor","","",10,null],[13,"I64Shl","","",10,null],[13,"I64ShrS","","",10,null],[13,"I64ShrU","","",10,null],[13,"I64Rotl","","",10,null],[13,"I64Rotr","","",10,null],[13,"F32Abs","","",10,null],[13,"F32Neg","","",10,null],[13,"F32Ceil","","",10,null],[13,"F32Floor","","",10,null],[13,"F32Trunc","","",10,null],[13,"F32Nearest","","",10,null],[13,"F32Sqrt","","",10,null],[13,"F32Add","","",10,null],[13,"F32Sub","","",10,null],[13,"F32Mul","","",10,null],[13,"F32Div","","",10,null],[13,"F32Min","","",10,null],[13,"F32Max","","",10,null],[13,"F32Copysign","","",10,null],[13,"F64Abs","","",10,null],[13,"F64Neg","","",10,null],[13,"F64Ceil","","",10,null],[13,"F64Floor","","",10,null],[13,"F64Trunc","","",10,null],[13,"F64Nearest","","",10,null],[13,"F64Sqrt","","",10,null],[13,"F64Add","","",10,null],[13,"F64Sub","","",10,null],[13,"F64Mul","","",10,null],[13,"F64Div","","",10,null],[13,"F64Min","","",10,null],[13,"F64Max","","",10,null],[13,"F64Copysign","","",10,null],[13,"I32WrapI64","","",10,null],[13,"I32TruncSF32","","",10,null],[13,"I32TruncUF32","","",10,null],[13,"I32TruncSF64","","",10,null],[13,"I32TruncUF64","","",10,null],[13,"I64ExtendSI32","","",10,null],[13,"I64ExtendUI32","","",10,null],[13,"I64TruncSF32","","",10,null],[13,"I64TruncUF32","","",10,null],[13,"I64TruncSF64","","",10,null],[13,"I64TruncUF64","","",10,null],[13,"F32ConvertSI32","","",10,null],[13,"F32ConvertUI32","","",10,null],[13,"F32ConvertSI64","","",10,null],[13,"F32ConvertUI64","","",10,null],[13,"F32DemoteF64","","",10,null],[13,"F64ConvertSI32","","",10,null],[13,"F64ConvertUI32","","",10,null],[13,"F64ConvertSI64","","",10,null],[13,"F64ConvertUI64","","",10,null],[13,"F64PromoteF32","","",10,null],[13,"I32ReinterpretF32","","",10,null],[13,"I64ReinterpretF64","","",10,null],[13,"F32ReinterpretI32","","",10,null],[13,"F64ReinterpretI64","","",10,null],[4,"NameSection","","Debug name information.",null,null],[13,"Module","","Module name section.",11,null],[13,"Function","","Function name section.",11,null],[13,"Local","","Local name section.",11,null],[13,"Unparsed","","Name section is unparsed.",11,null],[12,"name_type","parity_wasm::elements::NameSection","The numeric identifier for this name section type.",11,null],[12,"name_payload","","The contents of this name section, unparsed.",11,null],[4,"RelocationEntry","parity_wasm::elements","Relocation entry.",null,null],[13,"FunctionIndexLeb","","Function index.",12,null],[12,"offset","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.",12,null],[12,"index","","Index of the function symbol in the symbol table.",12,null],[13,"TableIndexSleb","parity_wasm::elements","Function table index.",12,null],[12,"offset","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.",12,null],[12,"index","","Index of the function symbol in the symbol table.",12,null],[13,"TableIndexI32","parity_wasm::elements","Function table index.",12,null],[12,"offset","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.",12,null],[12,"index","","Index of the function symbol in the symbol table.",12,null],[13,"MemoryAddressLeb","parity_wasm::elements","Linear memory index.",12,null],[12,"offset","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.",12,null],[12,"index","","Index of the data symbol in the symbol table.",12,null],[12,"addend","","Addend to add to the address.",12,null],[13,"MemoryAddressSleb","parity_wasm::elements","Linear memory index.",12,null],[12,"offset","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.",12,null],[12,"index","","Index of the data symbol in the symbol table.",12,null],[12,"addend","","Addend to add to the address.",12,null],[13,"MemoryAddressI32","parity_wasm::elements","Linear memory index.",12,null],[12,"offset","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.",12,null],[12,"index","","Index of the data symbol in the symbol table.",12,null],[12,"addend","","Addend to add to the address.",12,null],[13,"TypeIndexLeb","parity_wasm::elements","Type table index.",12,null],[12,"offset","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.",12,null],[12,"index","","Index of the type used.",12,null],[13,"GlobalIndexLeb","parity_wasm::elements","Global index.",12,null],[12,"offset","parity_wasm::elements::RelocationEntry","Offset of the value to rewrite.",12,null],[12,"index","","Index of the global symbol in the symbol table.",12,null],[4,"Error","parity_wasm::elements","Deserialization/serialization error",null,null],[13,"UnexpectedEof","","Unexpected end of input",13,null],[13,"InvalidMagic","","Invalid magic",13,null],[13,"UnsupportedVersion","","Unsupported version",13,null],[13,"InconsistentLength","","Inconsistence between declared and actual length",13,null],[12,"expected","parity_wasm::elements::Error","Expected length of the definition",13,null],[12,"actual","","Actual length of the definition",13,null],[13,"Other","parity_wasm::elements","Other static error",13,null],[13,"HeapOther","","Other allocated error",13,null],[13,"UnknownValueType","","Invalid/unknown value type declaration",13,null],[13,"UnknownTableElementType","","Invalid/unknown table element type declaration",13,null],[13,"NonUtf8String","","Non-utf8 string",13,null],[13,"UnknownExternalKind","","Unknown external kind code",13,null],[13,"UnknownInternalKind","","Unknown internal kind code",13,null],[13,"UnknownOpcode","","Unknown opcode encountered",13,null],[13,"InvalidVarUint1","","Invalid VarUint1 value",13,null],[13,"InvalidVarInt32","","Invalid VarInt32 value",13,null],[13,"InvalidVarInt64","","Invalid VarInt64 value",13,null],[13,"InvalidVarUint32","","Invalid VarUint32 value",13,null],[13,"InvalidVarUint64","","Invalid VarUint64 value",13,null],[13,"InconsistentMetadata","","Inconsistent metadata",13,null],[13,"InvalidSectionId","","Invalid section id",13,null],[13,"SectionsOutOfOrder","","Sections are out of order",13,null],[13,"DuplicatedSections","","Duplicated sections",13,null],[13,"InvalidMemoryReference","","Invalid memory reference (should be 0)",13,null],[13,"InvalidTableReference","","Invalid table reference (should be 0)",13,null],[13,"UnknownFunctionForm","","Unknown function form (should be 0x60)",13,null],[13,"InvalidVarInt7","","Invalid varint7 (should be in -64..63 range)",13,null],[13,"InconsistentCode","","Number of function body entries and signatures does not match",13,null],[5,"peek_size","","Returns size of the module in the provided stream",null,null],[5,"deserialize_buffer","","Deserialize deserializable type from buffer.",null,null],[5,"serialize","","Create buffer with serialized value.",null,{"i":[{"n":"t"}],"o":{"g":["vec"],"n":"result"}}],[5,"deserialize_file","","Deserialize module from the file.",null,{"i":[{"n":"p"}],"o":{"g":["module","error"],"n":"result"}}],[5,"serialize_to_file","","Serialize module to the file",null,{"i":[{"n":"p"},{"n":"module"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",14,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",14,{"i":[{"n":"self"}],"o":{"n":"varuint32"}}],[11,"eq","","",14,{"i":[{"n":"self"},{"n":"varuint32"}],"o":{"n":"bool"}}],[11,"ne","","",14,{"i":[{"n":"self"},{"n":"varuint32"}],"o":{"n":"bool"}}],[11,"from","","",14,{"i":[{"n":"u32"}],"o":{"n":"varuint32"}}],[11,"from","","",14,{"i":[{"n":"usize"}],"o":{"n":"varuint32"}}],[11,"deserialize","","",14,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",14,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",15,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",15,{"i":[{"n":"self"}],"o":{"n":"varuint64"}}],[11,"eq","","",15,{"i":[{"n":"self"},{"n":"varuint64"}],"o":{"n":"bool"}}],[11,"ne","","",15,{"i":[{"n":"self"},{"n":"varuint64"}],"o":{"n":"bool"}}],[11,"deserialize","","",15,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",15,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"from","","",15,{"i":[{"n":"u64"}],"o":{"n":"varuint64"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"varuint7"}}],[11,"eq","","",16,{"i":[{"n":"self"},{"n":"varuint7"}],"o":{"n":"bool"}}],[11,"ne","","",16,{"i":[{"n":"self"},{"n":"varuint7"}],"o":{"n":"bool"}}],[11,"from","","",16,{"i":[{"n":"u8"}],"o":{"n":"self"}}],[11,"deserialize","","",16,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",16,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",17,{"i":[{"n":"self"}],"o":{"n":"varint7"}}],[11,"eq","","",17,{"i":[{"n":"self"},{"n":"varint7"}],"o":{"n":"bool"}}],[11,"ne","","",17,{"i":[{"n":"self"},{"n":"varint7"}],"o":{"n":"bool"}}],[11,"from","","",17,{"i":[{"n":"i8"}],"o":{"n":"varint7"}}],[11,"deserialize","","",17,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",17,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"uint8"}}],[11,"eq","","",18,{"i":[{"n":"self"},{"n":"uint8"}],"o":{"n":"bool"}}],[11,"ne","","",18,{"i":[{"n":"self"},{"n":"uint8"}],"o":{"n":"bool"}}],[11,"from","","",18,{"i":[{"n":"u8"}],"o":{"n":"self"}}],[11,"deserialize","","",18,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",18,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",19,{"i":[{"n":"self"}],"o":{"n":"varint32"}}],[11,"eq","","",19,{"i":[{"n":"self"},{"n":"varint32"}],"o":{"n":"bool"}}],[11,"ne","","",19,{"i":[{"n":"self"},{"n":"varint32"}],"o":{"n":"bool"}}],[11,"from","","",19,{"i":[{"n":"i32"}],"o":{"n":"varint32"}}],[11,"deserialize","","",19,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",19,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",20,{"i":[{"n":"self"}],"o":{"n":"varint64"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"varint64"}],"o":{"n":"bool"}}],[11,"ne","","",20,{"i":[{"n":"self"},{"n":"varint64"}],"o":{"n":"bool"}}],[11,"from","","",20,{"i":[{"n":"i64"}],"o":{"n":"varint64"}}],[11,"deserialize","","",20,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",20,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"uint32"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"uint32"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"uint32"}],"o":{"n":"bool"}}],[11,"deserialize","","",21,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",21,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"from","","",21,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",22,{"i":[{"n":"self"}],"o":{"n":"uint64"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"uint64"}],"o":{"n":"bool"}}],[11,"ne","","",22,{"i":[{"n":"self"},{"n":"uint64"}],"o":{"n":"bool"}}],[11,"deserialize","","",22,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",22,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"from","","",22,{"i":[{"n":"u64"}],"o":{"n":"self"}}],[11,"fmt","","",23,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",23,{"i":[{"n":"self"}],"o":{"n":"varuint1"}}],[11,"eq","","",23,{"i":[{"n":"self"},{"n":"varuint1"}],"o":{"n":"bool"}}],[11,"ne","","",23,{"i":[{"n":"self"},{"n":"varuint1"}],"o":{"n":"bool"}}],[11,"from","","",23,{"i":[{"n":"bool"}],"o":{"n":"self"}}],[11,"deserialize","","",23,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",23,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",24,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",24,{"i":[{"n":"self"}],"o":{"n":"countedlist"}}],[11,"into_inner","","Destroy counted list returing inner vector.",24,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",24,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","New counted writer on top of the given serial writer",25,{"i":[{"n":"w"}],"o":{"n":"self"}}],[11,"done","","Finish counted writer routing, which writes accumulated length and actual payload.",25,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"countedlistwriter"}}],[11,"serialize","","",0,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"module"}}],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"module"}],"o":{"n":"bool"}}],[11,"ne","","",26,{"i":[{"n":"self"},{"n":"module"}],"o":{"n":"bool"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"importcounttype"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"importcounttype"}],"o":{"n":"bool"}}],[11,"default","","",26,{"o":{"n":"self"}}],[11,"new","","New module with sections",26,{"i":[{"g":["section"],"n":"vec"}],"o":{"n":"self"}}],[11,"into_sections","","Destructure the module, yielding sections",26,{"i":[{"n":"self"}],"o":{"g":["section"],"n":"vec"}}],[11,"version","","Version of module.",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"sections","","Sections list. Each known section is optional and may appear at most once.",26,null],[11,"sections_mut","","Sections list (mutable) Each known section is optional and may appear at most once.",26,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"code_section","","Code section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["codesection"],"n":"option"}}],[11,"code_section_mut","","Code section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["codesection"],"n":"option"}}],[11,"type_section","","Types section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["typesection"],"n":"option"}}],[11,"type_section_mut","","Types section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["typesection"],"n":"option"}}],[11,"import_section","","Imports section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["importsection"],"n":"option"}}],[11,"import_section_mut","","Imports section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["importsection"],"n":"option"}}],[11,"global_section","","Globals section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["globalsection"],"n":"option"}}],[11,"global_section_mut","","Globals section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["globalsection"],"n":"option"}}],[11,"export_section","","Exports section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["exportsection"],"n":"option"}}],[11,"export_section_mut","","Exports section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["exportsection"],"n":"option"}}],[11,"table_section","","Table section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["tablesection"],"n":"option"}}],[11,"table_section_mut","","Table section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["tablesection"],"n":"option"}}],[11,"data_section","","Data section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["datasection"],"n":"option"}}],[11,"data_section_mut","","Data section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["datasection"],"n":"option"}}],[11,"elements_section","","Element section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["elementsection"],"n":"option"}}],[11,"elements_section_mut","","Element section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["elementsection"],"n":"option"}}],[11,"memory_section","","Memory section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["memorysection"],"n":"option"}}],[11,"memory_section_mut","","Memory section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["memorysection"],"n":"option"}}],[11,"function_section","","Functions signatures section reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["functionsection"],"n":"option"}}],[11,"function_section_mut","","Functions signatures section mutable reference, if any.",26,{"i":[{"n":"self"}],"o":{"g":["functionsection"],"n":"option"}}],[11,"start_section","","Start section, if any.",26,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"names_section","","Functions signatures section reference, if any. NOTE: name section is not parsed by default so `names_section` could return None even if name section exists. Call `parse_names` to parse name section",26,{"i":[{"n":"self"}],"o":{"g":["namesection"],"n":"option"}}],[11,"names_section_mut","","Functions signatures section mutable reference, if any. NOTE: name section is not parsed by default so `names_section` could return None even if name section exists. Call `parse_names` to parse name section",26,{"i":[{"n":"self"}],"o":{"g":["namesection"],"n":"option"}}],[11,"parse_names","","Try to parse name section in place Corresponding custom section with proper header will convert to name sections If some of them will fail to be decoded, Err variant is returned with the list of (index, Error) tuples of failed sections.",26,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"parse_reloc","","Try to parse reloc section in place Corresponding custom section with proper header will convert to reloc sections If some of them will fail to be decoded, Err variant is returned with the list of (index, Error) tuples of failed sections.",26,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"import_count","","Count imports by provided type",26,{"i":[{"n":"self"},{"n":"importcounttype"}],"o":{"n":"usize"}}],[11,"functions_space","","Query functions space",26,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"globals_space","","Query globals space",26,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"table_space","","Query table space",26,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"memory_space","","Query memory space",26,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"deserialize","","",26,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",26,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"section"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"section"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"section"}],"o":{"n":"bool"}}],[11,"deserialize","","",3,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",3,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",27,{"o":{"n":"customsection"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"customsection"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"customsection"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"customsection"}],"o":{"n":"bool"}}],[11,"name","","Name of the custom section",27,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"payload","","Payload of the custom secion",27,null],[11,"name_mut","","Name of the custom section (mutable)",27,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"payload_mut","","Payload of the custom section (mutable)",27,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",27,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",27,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",28,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",28,{"o":{"n":"typesection"}}],[11,"clone","","",28,{"i":[{"n":"self"}],"o":{"n":"typesection"}}],[11,"eq","","",28,{"i":[{"n":"self"},{"n":"typesection"}],"o":{"n":"bool"}}],[11,"ne","","",28,{"i":[{"n":"self"},{"n":"typesection"}],"o":{"n":"bool"}}],[11,"with_types","","New type section with provided types",28,{"i":[{"g":["type"],"n":"vec"}],"o":{"n":"self"}}],[11,"types","","List of type declarations",28,null],[11,"types_mut","","List of type declarations (mutable)",28,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",28,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",28,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",29,{"o":{"n":"importsection"}}],[11,"clone","","",29,{"i":[{"n":"self"}],"o":{"n":"importsection"}}],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"importsection"}],"o":{"n":"bool"}}],[11,"ne","","",29,{"i":[{"n":"self"},{"n":"importsection"}],"o":{"n":"bool"}}],[11,"with_entries","","New import section with provided types",29,{"i":[{"g":["importentry"],"n":"vec"}],"o":{"n":"self"}}],[11,"entries","","List of import entries.",29,null],[11,"entries_mut","","List of import entries (mutable).",29,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"functions","","Returns number of functions",29,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"globals","","Returns number of globals",29,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"deserialize","","",29,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",29,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"default","","",30,{"o":{"n":"functionsection"}}],[11,"fmt","","",30,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",30,{"i":[{"n":"self"}],"o":{"n":"functionsection"}}],[11,"eq","","",30,{"i":[{"n":"self"},{"n":"functionsection"}],"o":{"n":"bool"}}],[11,"ne","","",30,{"i":[{"n":"self"},{"n":"functionsection"}],"o":{"n":"bool"}}],[11,"with_entries","","New function signatures section with provided entries",30,{"i":[{"g":["func"],"n":"vec"}],"o":{"n":"self"}}],[11,"entries_mut","","List of all functions in the section, mutable",30,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"entries","","List of all functions in the section",30,null],[11,"deserialize","","",30,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",30,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"default","","",31,{"o":{"n":"tablesection"}}],[11,"fmt","","",31,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",31,{"i":[{"n":"self"}],"o":{"n":"tablesection"}}],[11,"eq","","",31,{"i":[{"n":"self"},{"n":"tablesection"}],"o":{"n":"bool"}}],[11,"ne","","",31,{"i":[{"n":"self"},{"n":"tablesection"}],"o":{"n":"bool"}}],[11,"entries","","Table entries.",31,null],[11,"with_entries","","New table section with provided table entries",31,{"i":[{"g":["tabletype"],"n":"vec"}],"o":{"n":"self"}}],[11,"entries_mut","","Mutable table entries.",31,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",31,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",31,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"default","","",32,{"o":{"n":"memorysection"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",32,{"i":[{"n":"self"}],"o":{"n":"memorysection"}}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"memorysection"}],"o":{"n":"bool"}}],[11,"ne","","",32,{"i":[{"n":"self"},{"n":"memorysection"}],"o":{"n":"bool"}}],[11,"entries","","List of all memory entries in the section",32,null],[11,"with_entries","","New memory section with memory types",32,{"i":[{"g":["memorytype"],"n":"vec"}],"o":{"n":"self"}}],[11,"entries_mut","","Mutable list of all memory entries in the section",32,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",32,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",32,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"default","","",33,{"o":{"n":"globalsection"}}],[11,"fmt","","",33,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",33,{"i":[{"n":"self"}],"o":{"n":"globalsection"}}],[11,"eq","","",33,{"i":[{"n":"self"},{"n":"globalsection"}],"o":{"n":"bool"}}],[11,"ne","","",33,{"i":[{"n":"self"},{"n":"globalsection"}],"o":{"n":"bool"}}],[11,"entries","","List of all global entries in the section",33,null],[11,"with_entries","","New global section from list of global entries",33,{"i":[{"g":["globalentry"],"n":"vec"}],"o":{"n":"self"}}],[11,"entries_mut","","List of all global entries in the section (mutable)",33,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",33,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",33,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",34,{"o":{"n":"exportsection"}}],[11,"clone","","",34,{"i":[{"n":"self"}],"o":{"n":"exportsection"}}],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"exportsection"}],"o":{"n":"bool"}}],[11,"ne","","",34,{"i":[{"n":"self"},{"n":"exportsection"}],"o":{"n":"bool"}}],[11,"entries","","List of all export entries in the section",34,null],[11,"with_entries","","New export section from list of export entries",34,{"i":[{"g":["exportentry"],"n":"vec"}],"o":{"n":"self"}}],[11,"entries_mut","","List of all export entries in the section (mutable)",34,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",34,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",34,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"default","","",35,{"o":{"n":"codesection"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"codesection"}}],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"codesection"}],"o":{"n":"bool"}}],[11,"ne","","",35,{"i":[{"n":"self"},{"n":"codesection"}],"o":{"n":"bool"}}],[11,"with_bodies","","New code section with specified function bodies",35,{"i":[{"g":["funcbody"],"n":"vec"}],"o":{"n":"self"}}],[11,"bodies","","All function bodies in the section.",35,null],[11,"bodies_mut","","All function bodies in the section, mutable.",35,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",35,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",35,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"default","","",36,{"o":{"n":"elementsection"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",36,{"i":[{"n":"self"}],"o":{"n":"elementsection"}}],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"elementsection"}],"o":{"n":"bool"}}],[11,"ne","","",36,{"i":[{"n":"self"},{"n":"elementsection"}],"o":{"n":"bool"}}],[11,"with_entries","","New elements section",36,{"i":[{"g":["elementsegment"],"n":"vec"}],"o":{"n":"self"}}],[11,"entries","","New elements entries in the section",36,null],[11,"entries_mut","","List of all data entries in the section (mutable)",36,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",36,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",36,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"default","","",37,{"o":{"n":"datasection"}}],[11,"fmt","","",37,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",37,{"i":[{"n":"self"}],"o":{"n":"datasection"}}],[11,"eq","","",37,{"i":[{"n":"self"},{"n":"datasection"}],"o":{"n":"bool"}}],[11,"ne","","",37,{"i":[{"n":"self"},{"n":"datasection"}],"o":{"n":"bool"}}],[11,"with_entries","","New data section",37,{"i":[{"g":["datasegment"],"n":"vec"}],"o":{"n":"self"}}],[11,"entries","","List of all data entries in the section",37,null],[11,"entries_mut","","List of all data entries in the section (mutable)",37,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",37,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",37,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"ne","","",6,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"deserialize","","",6,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",6,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"clone","","",7,{"i":[{"n":"self"}],"o":{"n":"valuetype"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"valuetype"}],"o":{"n":"bool"}}],[11,"deserialize","","",7,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",7,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"blocktype"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"blocktype"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"blocktype"}],"o":{"n":"bool"}}],[11,"deserialize","","",8,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",8,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"functiontype"}}],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"functiontype"}],"o":{"n":"bool"}}],[11,"ne","","",38,{"i":[{"n":"self"},{"n":"functiontype"}],"o":{"n":"bool"}}],[11,"default","","",38,{"o":{"n":"self"}}],[11,"new","","New function type given the signature in-params(`params`) and return type (`return_type`)",38,{"i":[{"g":["valuetype"],"n":"vec"},{"g":["valuetype"],"n":"option"}],"o":{"n":"self"}}],[11,"form","","Function form (currently only valid value is `0x60`)",38,{"i":[{"n":"self"}],"o":{"n":"u8"}}],[11,"params","","Parameters in the function signature.",38,null],[11,"params_mut","","Mutable parameters in the function signature.",38,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"return_type","","Return type in the function signature, if any.",38,{"i":[{"n":"self"}],"o":{"g":["valuetype"],"n":"option"}}],[11,"return_type_mut","","Mutable type in the function signature, if any.",38,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"deserialize","","",38,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",38,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"tableelementtype"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"tableelementtype"}],"o":{"n":"bool"}}],[11,"deserialize","","",9,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",9,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",39,{"i":[{"n":"self"}],"o":{"n":"globaltype"}}],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"globaltype"}],"o":{"n":"bool"}}],[11,"ne","","",39,{"i":[{"n":"self"},{"n":"globaltype"}],"o":{"n":"bool"}}],[11,"new","","New global type",39,{"i":[{"n":"valuetype"},{"n":"bool"}],"o":{"n":"self"}}],[11,"content_type","","Type of the global entry",39,{"i":[{"n":"self"}],"o":{"n":"valuetype"}}],[11,"is_mutable","","Is global entry is declared as mutable",39,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"deserialize","","",39,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",39,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",40,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",40,{"i":[{"n":"self"}],"o":{"n":"tabletype"}}],[11,"eq","","",40,{"i":[{"n":"self"},{"n":"tabletype"}],"o":{"n":"bool"}}],[11,"ne","","",40,{"i":[{"n":"self"},{"n":"tabletype"}],"o":{"n":"bool"}}],[11,"new","","New table definition",40,{"i":[{"n":"u32"},{"g":["u32"],"n":"option"}],"o":{"n":"self"}}],[11,"limits","","Table memory specification",40,{"i":[{"n":"self"}],"o":{"n":"resizablelimits"}}],[11,"elem_type","","Table element type",40,{"i":[{"n":"self"}],"o":{"n":"tableelementtype"}}],[11,"deserialize","","",40,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",40,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",41,{"i":[{"n":"self"}],"o":{"n":"resizablelimits"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"resizablelimits"}],"o":{"n":"bool"}}],[11,"ne","","",41,{"i":[{"n":"self"},{"n":"resizablelimits"}],"o":{"n":"bool"}}],[11,"new","","New memory limits definition",41,{"i":[{"n":"u32"},{"g":["u32"],"n":"option"}],"o":{"n":"self"}}],[11,"initial","","Initial size",41,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"maximum","","Maximum size",41,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"deserialize","","",41,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",41,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",42,{"i":[{"n":"self"}],"o":{"n":"memorytype"}}],[11,"eq","","",42,{"i":[{"n":"self"},{"n":"memorytype"}],"o":{"n":"bool"}}],[11,"ne","","",42,{"i":[{"n":"self"},{"n":"memorytype"}],"o":{"n":"bool"}}],[11,"new","","New memory definition",42,{"i":[{"n":"u32"},{"g":["u32"],"n":"option"}],"o":{"n":"self"}}],[11,"limits","","Limits of the memory entry.",42,{"i":[{"n":"self"}],"o":{"n":"resizablelimits"}}],[11,"deserialize","","",42,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",42,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",4,{"i":[{"n":"self"}],"o":{"n":"external"}}],[11,"eq","","",4,{"i":[{"n":"self"},{"n":"external"}],"o":{"n":"bool"}}],[11,"ne","","",4,{"i":[{"n":"self"},{"n":"external"}],"o":{"n":"bool"}}],[11,"deserialize","","",4,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",4,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",43,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",43,{"i":[{"n":"self"}],"o":{"n":"importentry"}}],[11,"eq","","",43,{"i":[{"n":"self"},{"n":"importentry"}],"o":{"n":"bool"}}],[11,"ne","","",43,{"i":[{"n":"self"},{"n":"importentry"}],"o":{"n":"bool"}}],[11,"new","","New import entry.",43,{"i":[{"n":"string"},{"n":"string"},{"n":"external"}],"o":{"n":"self"}}],[11,"module","","Module reference of the import entry.",43,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"module_mut","","Module reference of the import entry (mutable).",43,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"field","","Field reference of the import entry.",43,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"field_mut","","Field reference of the import entry (mutable)",43,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"external","","Local binidng of the import entry.",43,{"i":[{"n":"self"}],"o":{"n":"external"}}],[11,"external_mut","","Local binidng of the import entry (mutable)",43,{"i":[{"n":"self"}],"o":{"n":"external"}}],[11,"deserialize","","",43,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",43,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"internal"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"internal"}],"o":{"n":"bool"}}],[11,"ne","","",5,{"i":[{"n":"self"},{"n":"internal"}],"o":{"n":"bool"}}],[11,"deserialize","","",5,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",5,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",44,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",44,{"i":[{"n":"self"}],"o":{"n":"exportentry"}}],[11,"eq","","",44,{"i":[{"n":"self"},{"n":"exportentry"}],"o":{"n":"bool"}}],[11,"ne","","",44,{"i":[{"n":"self"},{"n":"exportentry"}],"o":{"n":"bool"}}],[11,"new","","New export entry",44,{"i":[{"n":"string"},{"n":"internal"}],"o":{"n":"self"}}],[11,"field","","Public name",44,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"field_mut","","Public name (mutable)",44,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"internal","","Internal reference of the export entry.",44,{"i":[{"n":"self"}],"o":{"n":"internal"}}],[11,"internal_mut","","Internal reference of the export entry (mutable).",44,{"i":[{"n":"self"}],"o":{"n":"internal"}}],[11,"deserialize","","",44,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",44,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"clone","","",45,{"i":[{"n":"self"}],"o":{"n":"globalentry"}}],[11,"fmt","","",45,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",45,{"i":[{"n":"self"},{"n":"globalentry"}],"o":{"n":"bool"}}],[11,"ne","","",45,{"i":[{"n":"self"},{"n":"globalentry"}],"o":{"n":"bool"}}],[11,"new","","New global entry",45,{"i":[{"n":"globaltype"},{"n":"initexpr"}],"o":{"n":"self"}}],[11,"global_type","","Global type.",45,{"i":[{"n":"self"}],"o":{"n":"globaltype"}}],[11,"init_expr","","Initialization expression (instructions) for global.",45,{"i":[{"n":"self"}],"o":{"n":"initexpr"}}],[11,"global_type_mut","","Global type (mutable)",45,{"i":[{"n":"self"}],"o":{"n":"globaltype"}}],[11,"init_expr_mut","","Initialization expression (instructions) for global (mutable)",45,{"i":[{"n":"self"}],"o":{"n":"initexpr"}}],[11,"deserialize","","",45,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",45,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",46,{"i":[{"n":"self"}],"o":{"n":"instructions"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"instructions"}],"o":{"n":"bool"}}],[11,"ne","","",46,{"i":[{"n":"self"},{"n":"instructions"}],"o":{"n":"bool"}}],[11,"new","","New list of instructions from vector of instructions.",46,{"i":[{"g":["instruction"],"n":"vec"}],"o":{"n":"self"}}],[11,"empty","","Empty expression with only `Instruction::End` instruction.",46,{"o":{"n":"self"}}],[11,"elements","","List of individual instructions.",46,null],[11,"elements_mut","","Individual instructions, mutable.",46,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",46,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"initexpr"}}],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"initexpr"}],"o":{"n":"bool"}}],[11,"ne","","",47,{"i":[{"n":"self"},{"n":"initexpr"}],"o":{"n":"bool"}}],[11,"new","","New initialization expression from instruction list. `code` must end with the `Instruction::End` instruction!",47,{"i":[{"g":["instruction"],"n":"vec"}],"o":{"n":"self"}}],[11,"empty","","Empty expression with only `Instruction::End` instruction",47,{"o":{"n":"self"}}],[11,"code","","List of instructions used in the expression.",47,null],[11,"code_mut","","List of instructions used in the expression.",47,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",47,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"instruction"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"instruction"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"instruction"}],"o":{"n":"bool"}}],[11,"is_block","","Is this instruction starts the new block (which should end with terminal instruction).",10,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_terminal","","Is this instruction determines the termination of instruction sequence `true` for `Instruction::End`",10,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"deserialize","","",10,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",10,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"serialize","","",46,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"serialize","","",47,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"func"}}],[11,"eq","","",48,{"i":[{"n":"self"},{"n":"func"}],"o":{"n":"bool"}}],[11,"ne","","",48,{"i":[{"n":"self"},{"n":"func"}],"o":{"n":"bool"}}],[11,"new","","New function signature",48,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[11,"type_ref","","Function signature type reference.",48,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"type_ref_mut","","Function signature type reference (mutable).",48,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"serialize","","",48,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"deserialize","","",48,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"local"}}],[11,"eq","","",49,{"i":[{"n":"self"},{"n":"local"}],"o":{"n":"bool"}}],[11,"ne","","",49,{"i":[{"n":"self"},{"n":"local"}],"o":{"n":"bool"}}],[11,"new","","New local with `count` and `value_type`.",49,{"i":[{"n":"u32"},{"n":"valuetype"}],"o":{"n":"self"}}],[11,"count","","Number of locals with the shared type.",49,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"value_type","","Type of the locals.",49,{"i":[{"n":"self"}],"o":{"n":"valuetype"}}],[11,"deserialize","","",49,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",49,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",50,{"i":[{"n":"self"}],"o":{"n":"funcbody"}}],[11,"eq","","",50,{"i":[{"n":"self"},{"n":"funcbody"}],"o":{"n":"bool"}}],[11,"ne","","",50,{"i":[{"n":"self"},{"n":"funcbody"}],"o":{"n":"bool"}}],[11,"new","","New function body with given `locals` and `instructions`",50,{"i":[{"g":["local"],"n":"vec"},{"n":"instructions"}],"o":{"n":"self"}}],[11,"empty","","List of individual instructions",50,{"o":{"n":"self"}}],[11,"locals","","Locals declared in function body.",50,null],[11,"code","","Instruction list of the function body. Minimal instruction list is just `&[Instruction::End]`",50,{"i":[{"n":"self"}],"o":{"n":"instructions"}}],[11,"locals_mut","","Locals declared in function body (mutable).",50,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"code_mut","","Instruction list of the function body (mutable).",50,{"i":[{"n":"self"}],"o":{"n":"instructions"}}],[11,"deserialize","","",50,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",50,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",51,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",51,{"i":[{"n":"self"}],"o":{"n":"elementsegment"}}],[11,"eq","","",51,{"i":[{"n":"self"},{"n":"elementsegment"}],"o":{"n":"bool"}}],[11,"ne","","",51,{"i":[{"n":"self"},{"n":"elementsegment"}],"o":{"n":"bool"}}],[11,"new","","New element segment.",51,{"i":[{"n":"u32"},{"n":"initexpr"},{"g":["u32"],"n":"vec"}],"o":{"n":"self"}}],[11,"members","","Sequence of function indices.",51,null],[11,"members_mut","","Sequence of function indices (mutable)",51,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"index","","Table index (currently valid only value of `0`)",51,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"offset","","An i32 initializer expression that computes the offset at which to place the elements.",51,{"i":[{"n":"self"}],"o":{"n":"initexpr"}}],[11,"offset_mut","","An i32 initializer expression that computes the offset at which to place the elements (mutable)",51,{"i":[{"n":"self"}],"o":{"n":"initexpr"}}],[11,"deserialize","","",51,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",51,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"clone","","",52,{"i":[{"n":"self"}],"o":{"n":"datasegment"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",52,{"i":[{"n":"self"},{"n":"datasegment"}],"o":{"n":"bool"}}],[11,"ne","","",52,{"i":[{"n":"self"},{"n":"datasegment"}],"o":{"n":"bool"}}],[11,"new","","New data segments.",52,{"i":[{"n":"u32"},{"n":"initexpr"},{"g":["u8"],"n":"vec"}],"o":{"n":"self"}}],[11,"index","","Linear memory index (currently the only valid value is `0`).",52,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"offset","","An i32 initializer expression that computes the offset at which to place the data.",52,{"i":[{"n":"self"}],"o":{"n":"initexpr"}}],[11,"offset_mut","","An i32 initializer expression that computes the offset at which to place the data (mutable)",52,{"i":[{"n":"self"}],"o":{"n":"initexpr"}}],[11,"value","","Initial value of the data segment.",52,null],[11,"value_mut","","Initial value of the data segment (mutable).",52,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","",52,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",52,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",53,{"o":{"n":"indexmap"}}],[11,"with_capacity","","Create an empty `IndexMap`, preallocating enough space to store `capacity` entries without needing to reallocate the underlying memory.",53,{"i":[{"n":"usize"}],"o":{"n":"indexmap"}}],[11,"clear","","Clear the map.",53,{"i":[{"n":"self"}]}],[11,"get","","Return the name for the specified index, if it exists.",53,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[11,"contains_key","","Does the map contain an entry for the specified index?",53,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"bool"}}],[11,"insert","","Insert a name into our map, returning the existing value if present.",53,{"i":[{"n":"self"},{"n":"u32"},{"n":"t"}],"o":{"n":"option"}}],[11,"remove","","Remove an item if present and return it.",53,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"option"}}],[11,"len","","The number of items in this map.",53,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"is_empty","","Is this map empty?",53,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"iter","","Create a non-consuming iterator over this `IndexMap`'s keys and values.",53,{"i":[{"n":"self"}],"o":{"n":"iter"}}],[11,"deserialize_with","","Custom deserialization routine.",53,{"i":[{"n":"usize"},{"n":"f"},{"n":"r"}],"o":{"g":["indexmap","error"],"n":"result"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"indexmap"}}],[11,"eq","","",53,{"i":[{"n":"self"},{"n":"indexmap"}],"o":{"n":"bool"}}],[11,"from_iter","","Create an `IndexMap` from an iterator.",53,{"i":[{"n":"i"}],"o":{"n":"self"}}],[11,"into_iter","","",53,{"i":[{"n":"self"}],"o":{"n":"intoiter"}}],[11,"serialize","","",53,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"deserialize","","Deserialize a map containing simple values that support `Deserialize`. We will allocate an underlying array no larger than `max_entry_space` to hold the data, so the maximum index must be less than `max_entry_space`.",53,{"i":[{"n":"usize"},{"n":"r"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"namesection"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",11,{"i":[{"n":"self"},{"n":"namesection"}],"o":{"n":"bool"}}],[11,"ne","","",11,{"i":[{"n":"self"},{"n":"namesection"}],"o":{"n":"bool"}}],[11,"deserialize","","Deserialize a name section.",11,{"i":[{"n":"module"},{"n":"r"}],"o":{"g":["namesection","error"],"n":"result"}}],[11,"serialize","","",11,{"i":[{"n":"self"},{"n":"w"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",54,{"i":[{"n":"self"}],"o":{"n":"modulenamesection"}}],[11,"fmt","","",54,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",54,{"i":[{"n":"self"},{"n":"modulenamesection"}],"o":{"n":"bool"}}],[11,"ne","","",54,{"i":[{"n":"self"},{"n":"modulenamesection"}],"o":{"n":"bool"}}],[11,"new","","Create a new module name section with the specified name.",54,{"i":[{"n":"s"}],"o":{"n":"modulenamesection"}}],[11,"name","","The name of this module.",54,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"name_mut","","The name of this module (mutable).",54,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"serialize","","",54,{"i":[{"n":"self"},{"n":"w"}],"o":{"g":["error"],"n":"result"}}],[11,"deserialize","","",54,{"i":[{"n":"r"}],"o":{"g":["modulenamesection","error"],"n":"result"}}],[11,"clone","","",55,{"i":[{"n":"self"}],"o":{"n":"functionnamesection"}}],[11,"fmt","","",55,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",55,{"o":{"n":"functionnamesection"}}],[11,"eq","","",55,{"i":[{"n":"self"},{"n":"functionnamesection"}],"o":{"n":"bool"}}],[11,"ne","","",55,{"i":[{"n":"self"},{"n":"functionnamesection"}],"o":{"n":"bool"}}],[11,"names","","A map from function indices to names.",55,{"i":[{"n":"self"}],"o":{"n":"namemap"}}],[11,"names_mut","","A map from function indices to names (mutable).",55,{"i":[{"n":"self"}],"o":{"n":"namemap"}}],[11,"deserialize","","Deserialize names, making sure that all names correspond to functions.",55,{"i":[{"n":"module"},{"n":"r"}],"o":{"g":["functionnamesection","error"],"n":"result"}}],[11,"serialize","","",55,{"i":[{"n":"self"},{"n":"w"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",56,{"i":[{"n":"self"}],"o":{"n":"localnamesection"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"default","","",56,{"o":{"n":"localnamesection"}}],[11,"eq","","",56,{"i":[{"n":"self"},{"n":"localnamesection"}],"o":{"n":"bool"}}],[11,"ne","","",56,{"i":[{"n":"self"},{"n":"localnamesection"}],"o":{"n":"bool"}}],[11,"local_names","","A map from function indices to a map from variables indices to names.",56,{"i":[{"n":"self"}],"o":{"n":"indexmap"}}],[11,"local_names_mut","","A map from function indices to a map from variables indices to names (mutable).",56,{"i":[{"n":"self"}],"o":{"n":"indexmap"}}],[11,"deserialize","","Deserialize names, making sure that all names correspond to local variables.",56,{"i":[{"n":"module"},{"n":"r"}],"o":{"g":["localnamesection","error"],"n":"result"}}],[11,"serialize","","",56,{"i":[{"n":"self"},{"n":"w"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",57,{"i":[{"n":"self"}],"o":{"n":"relocsection"}}],[11,"fmt","","",57,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",57,{"i":[{"n":"self"},{"n":"relocsection"}],"o":{"n":"bool"}}],[11,"ne","","",57,{"i":[{"n":"self"},{"n":"relocsection"}],"o":{"n":"bool"}}],[11,"name","","Name of this section.",57,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"name_mut","","Name of this section (mutable).",57,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"section_id","","ID of the section containing the relocations described in this section.",57,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"section_id_mut","","ID of the section containing the relocations described in this section (mutable).",57,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"relocation_section_name","","Name of the section containing the relocations described in this section.",57,{"i":[{"n":"self"}],"o":{"g":["str"],"n":"option"}}],[11,"relocation_section_name_mut","","Name of the section containing the relocations described in this section (mutable).",57,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"entries","","List of relocation entries.",57,null],[11,"entries_mut","","List of relocation entries (mutable).",57,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"deserialize","","Deserialize a reloc section.",57,{"i":[{"n":"string"},{"n":"r"}],"o":{"g":["error"],"n":"result"}}],[11,"serialize","","",57,{"i":[{"n":"self"},{"n":"w"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"relocationentry"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",12,{"i":[{"n":"self"},{"n":"relocationentry"}],"o":{"n":"bool"}}],[11,"ne","","",12,{"i":[{"n":"self"},{"n":"relocationentry"}],"o":{"n":"bool"}}],[11,"deserialize","","",12,{"i":[{"n":"r"}],"o":{"n":"result"}}],[11,"serialize","","",12,{"i":[{"n":"self"},{"n":"w"}],"o":{"g":["error"],"n":"result"}}],[0,"opcodes","","",null,null],[17,"UNREACHABLE","parity_wasm::elements::opcodes","",null,null],[17,"NOP","","",null,null],[17,"BLOCK","","",null,null],[17,"LOOP","","",null,null],[17,"IF","","",null,null],[17,"ELSE","","",null,null],[17,"END","","",null,null],[17,"BR","","",null,null],[17,"BRIF","","",null,null],[17,"BRTABLE","","",null,null],[17,"RETURN","","",null,null],[17,"CALL","","",null,null],[17,"CALLINDIRECT","","",null,null],[17,"DROP","","",null,null],[17,"SELECT","","",null,null],[17,"GETLOCAL","","",null,null],[17,"SETLOCAL","","",null,null],[17,"TEELOCAL","","",null,null],[17,"GETGLOBAL","","",null,null],[17,"SETGLOBAL","","",null,null],[17,"I32LOAD","","",null,null],[17,"I64LOAD","","",null,null],[17,"F32LOAD","","",null,null],[17,"F64LOAD","","",null,null],[17,"I32LOAD8S","","",null,null],[17,"I32LOAD8U","","",null,null],[17,"I32LOAD16S","","",null,null],[17,"I32LOAD16U","","",null,null],[17,"I64LOAD8S","","",null,null],[17,"I64LOAD8U","","",null,null],[17,"I64LOAD16S","","",null,null],[17,"I64LOAD16U","","",null,null],[17,"I64LOAD32S","","",null,null],[17,"I64LOAD32U","","",null,null],[17,"I32STORE","","",null,null],[17,"I64STORE","","",null,null],[17,"F32STORE","","",null,null],[17,"F64STORE","","",null,null],[17,"I32STORE8","","",null,null],[17,"I32STORE16","","",null,null],[17,"I64STORE8","","",null,null],[17,"I64STORE16","","",null,null],[17,"I64STORE32","","",null,null],[17,"CURRENTMEMORY","","",null,null],[17,"GROWMEMORY","","",null,null],[17,"I32CONST","","",null,null],[17,"I64CONST","","",null,null],[17,"F32CONST","","",null,null],[17,"F64CONST","","",null,null],[17,"I32EQZ","","",null,null],[17,"I32EQ","","",null,null],[17,"I32NE","","",null,null],[17,"I32LTS","","",null,null],[17,"I32LTU","","",null,null],[17,"I32GTS","","",null,null],[17,"I32GTU","","",null,null],[17,"I32LES","","",null,null],[17,"I32LEU","","",null,null],[17,"I32GES","","",null,null],[17,"I32GEU","","",null,null],[17,"I64EQZ","","",null,null],[17,"I64EQ","","",null,null],[17,"I64NE","","",null,null],[17,"I64LTS","","",null,null],[17,"I64LTU","","",null,null],[17,"I64GTS","","",null,null],[17,"I64GTU","","",null,null],[17,"I64LES","","",null,null],[17,"I64LEU","","",null,null],[17,"I64GES","","",null,null],[17,"I64GEU","","",null,null],[17,"F32EQ","","",null,null],[17,"F32NE","","",null,null],[17,"F32LT","","",null,null],[17,"F32GT","","",null,null],[17,"F32LE","","",null,null],[17,"F32GE","","",null,null],[17,"F64EQ","","",null,null],[17,"F64NE","","",null,null],[17,"F64LT","","",null,null],[17,"F64GT","","",null,null],[17,"F64LE","","",null,null],[17,"F64GE","","",null,null],[17,"I32CLZ","","",null,null],[17,"I32CTZ","","",null,null],[17,"I32POPCNT","","",null,null],[17,"I32ADD","","",null,null],[17,"I32SUB","","",null,null],[17,"I32MUL","","",null,null],[17,"I32DIVS","","",null,null],[17,"I32DIVU","","",null,null],[17,"I32REMS","","",null,null],[17,"I32REMU","","",null,null],[17,"I32AND","","",null,null],[17,"I32OR","","",null,null],[17,"I32XOR","","",null,null],[17,"I32SHL","","",null,null],[17,"I32SHRS","","",null,null],[17,"I32SHRU","","",null,null],[17,"I32ROTL","","",null,null],[17,"I32ROTR","","",null,null],[17,"I64CLZ","","",null,null],[17,"I64CTZ","","",null,null],[17,"I64POPCNT","","",null,null],[17,"I64ADD","","",null,null],[17,"I64SUB","","",null,null],[17,"I64MUL","","",null,null],[17,"I64DIVS","","",null,null],[17,"I64DIVU","","",null,null],[17,"I64REMS","","",null,null],[17,"I64REMU","","",null,null],[17,"I64AND","","",null,null],[17,"I64OR","","",null,null],[17,"I64XOR","","",null,null],[17,"I64SHL","","",null,null],[17,"I64SHRS","","",null,null],[17,"I64SHRU","","",null,null],[17,"I64ROTL","","",null,null],[17,"I64ROTR","","",null,null],[17,"F32ABS","","",null,null],[17,"F32NEG","","",null,null],[17,"F32CEIL","","",null,null],[17,"F32FLOOR","","",null,null],[17,"F32TRUNC","","",null,null],[17,"F32NEAREST","","",null,null],[17,"F32SQRT","","",null,null],[17,"F32ADD","","",null,null],[17,"F32SUB","","",null,null],[17,"F32MUL","","",null,null],[17,"F32DIV","","",null,null],[17,"F32MIN","","",null,null],[17,"F32MAX","","",null,null],[17,"F32COPYSIGN","","",null,null],[17,"F64ABS","","",null,null],[17,"F64NEG","","",null,null],[17,"F64CEIL","","",null,null],[17,"F64FLOOR","","",null,null],[17,"F64TRUNC","","",null,null],[17,"F64NEAREST","","",null,null],[17,"F64SQRT","","",null,null],[17,"F64ADD","","",null,null],[17,"F64SUB","","",null,null],[17,"F64MUL","","",null,null],[17,"F64DIV","","",null,null],[17,"F64MIN","","",null,null],[17,"F64MAX","","",null,null],[17,"F64COPYSIGN","","",null,null],[17,"I32WRAPI64","","",null,null],[17,"I32TRUNCSF32","","",null,null],[17,"I32TRUNCUF32","","",null,null],[17,"I32TRUNCSF64","","",null,null],[17,"I32TRUNCUF64","","",null,null],[17,"I64EXTENDSI32","","",null,null],[17,"I64EXTENDUI32","","",null,null],[17,"I64TRUNCSF32","","",null,null],[17,"I64TRUNCUF32","","",null,null],[17,"I64TRUNCSF64","","",null,null],[17,"I64TRUNCUF64","","",null,null],[17,"F32CONVERTSI32","","",null,null],[17,"F32CONVERTUI32","","",null,null],[17,"F32CONVERTSI64","","",null,null],[17,"F32CONVERTUI64","","",null,null],[17,"F32DEMOTEF64","","",null,null],[17,"F64CONVERTSI32","","",null,null],[17,"F64CONVERTUI32","","",null,null],[17,"F64CONVERTSI64","","",null,null],[17,"F64CONVERTUI64","","",null,null],[17,"F64PROMOTEF32","","",null,null],[17,"I32REINTERPRETF32","","",null,null],[17,"I64REINTERPRETF64","","",null,null],[17,"F32REINTERPRETI32","","",null,null],[17,"F64REINTERPRETI64","","",null,null],[6,"NameMap","parity_wasm::elements","A map from indices to names.",null,null],[8,"Deserialize","","Deserialization from serial i/o",null,null],[16,"Error","","Serialization error produced by deserialization routine.",58,null],[10,"deserialize","","Deserialize type from serial i/o",58,{"i":[{"n":"r"}],"o":{"n":"result"}}],[8,"Serialize","","Serialization to serial i/o. Takes self by value to consume less memory (parity-wasm IR is being partially freed by filling the result buffer).",null,null],[16,"Error","","Serialization error produced by serialization routine.",59,null],[10,"serialize","","Serialize type to serial i/o",59,{"i":[{"n":"self"},{"n":"w"}],"o":{"n":"result"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",13,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",13,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"deserialize","","",1,{"i":[{"n":"r"}],"o":{"n":"result"}}],[0,"builder","parity_wasm","Various builders to generate/alter wasm components",null,null],[3,"SignatureBuilder","parity_wasm::builder","Signature builder",null,null],[3,"SignaturesBuilder","","Multiple signatures builder",null,null],[3,"FunctionBuilder","","Function definition builder",null,null],[3,"TypeRefBuilder","","Type (signature) reference builder (for function/import/indirect call)",null,null],[3,"FuncBodyBuilder","","Function body (code) builder",null,null],[3,"FunctionDefinition","","Function definition (extended structure to specify function entirely, incl. signature, mainness and code)",null,null],[12,"is_main","","Is this function is start function",60,null],[12,"signature","","Signature description",60,null],[12,"code","","Body (code) of the function",60,null],[3,"DataSegmentBuilder","","Data segment builder",null,null],[3,"ExportBuilder","","Export entry builder",null,null],[3,"ExportInternalBuilder","","Internal mapping builder for export entry",null,null],[3,"GlobalBuilder","","Global builder",null,null],[3,"ImportBuilder","","Import builder",null,null],[3,"Identity","","Identity chain element",null,null],[3,"MemoryBuilder","","Memory and static regions builder",null,null],[3,"ModuleBuilder","","Module builder",null,null],[3,"TableBuilder","","Table builder",null,null],[3,"TableDefinition","","Table definition",null,null],[12,"min","","Minimum length",61,null],[12,"max","","Maximum length, if any",61,null],[12,"elements","","Element segments, if any",61,null],[3,"TableEntryDefinition","","Table elements entry definition",null,null],[12,"offset","","Offset initialization expression",62,null],[12,"values","","Values of initialization",62,null],[5,"signatures","","New builder of signature list",null,{"o":{"n":"signaturesbuilder"}}],[5,"signature","","New signature builder",null,{"o":{"n":"signaturebuilder"}}],[5,"function","","New builder of function (signature & body)",null,{"o":{"n":"functionbuilder"}}],[5,"export","","New builder for export entry",null,{"o":{"n":"exportbuilder"}}],[5,"global","","New builder for export entry",null,{"o":{"n":"globalbuilder"}}],[5,"import","","New builder for import entry",null,{"o":{"n":"importbuilder"}}],[5,"module","","Start new module builder # Examples",null,{"o":{"n":"modulebuilder"}}],[5,"from_module","","Start builder to extend existing module",null,{"i":[{"n":"module"}],"o":{"n":"modulebuilder"}}],[11,"new","","New empty module builder",63,{"o":{"n":"self"}}],[11,"with_callback","","New module builder with bound callback",63,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"with_module","","Builder from raw module",63,{"i":[{"n":"self"},{"n":"module"}],"o":{"n":"self"}}],[11,"with_sections","","Fill module with sections from iterator",63,{"i":[{"n":"self"},{"n":"i"}],"o":{"n":"self"}}],[11,"with_section","","Add additional section",63,{"i":[{"n":"self"},{"n":"section"}],"o":{"n":"self"}}],[11,"with_signatures","","Binds to the type section, creates additional types when required",63,{"i":[{"n":"self"},{"g":["signature"],"n":"vec"}],"o":{"n":"self"}}],[11,"push_function","","Push stand-alone function definition, creating sections, signature and code blocks in corresponding sections. `FunctionDefinition` can be build using `builder::function` builder",63,{"i":[{"n":"self"},{"n":"functiondefinition"}],"o":{"n":"codelocation"}}],[11,"push_memory","","Push linear memory region",63,{"i":[{"n":"self"},{"n":"memorydefinition"}],"o":{"n":"u32"}}],[11,"push_table","","Push table",63,{"i":[{"n":"self"},{"n":"tabledefinition"}],"o":{"n":"u32"}}],[11,"push_signature","","Push one function signature, returning it's calling index. Can create corresponding type in type section.",63,{"i":[{"n":"self"},{"n":"signature"}],"o":{"n":"u32"}}],[11,"push_signatures","","Push signatures in the module, returning corresponding indices of pushed signatures",63,{"i":[{"n":"self"},{"g":["signature"],"n":"vec"}],"o":{"g":["u32"],"n":"vec"}}],[11,"push_import","","Push import entry to module. Not that it does not update calling indices in function bodies.",63,{"i":[{"n":"self"},{"n":"importentry"}],"o":{"n":"u32"}}],[11,"push_export","","Push export entry to module.",63,{"i":[{"n":"self"},{"n":"exportentry"}],"o":{"n":"u32"}}],[11,"function","","Add new function using dedicated builder",63,{"i":[{"n":"self"}],"o":{"n":"functionbuilder"}}],[11,"memory","","Add new linear memory using dedicated builder",63,{"i":[{"n":"self"}],"o":{"n":"memorybuilder"}}],[11,"table","","Add new table using dedicated builder",63,{"i":[{"n":"self"}],"o":{"n":"tablebuilder"}}],[11,"functions","","Define functions section",63,{"i":[{"n":"self"}],"o":{"n":"signaturesbuilder"}}],[11,"with_export","","With inserted export entry",63,{"i":[{"n":"self"},{"n":"exportentry"}],"o":{"n":"self"}}],[11,"with_import","","With inserted import entry",63,{"i":[{"n":"self"},{"n":"importentry"}],"o":{"n":"self"}}],[11,"import","","Import entry builder # Examples ``` use parity_wasm::builder::module;",63,{"i":[{"n":"self"}],"o":{"n":"importbuilder"}}],[11,"with_global","","With global variable",63,{"i":[{"n":"self"},{"n":"globalentry"}],"o":{"n":"self"}}],[11,"with_table","","With table",63,{"i":[{"n":"self"},{"n":"tabletype"}],"o":{"n":"self"}}],[11,"export","","Export entry builder # Examples ``` use parity_wasm::builder::module; use parity_wasm::elements::Instruction::*;",63,{"i":[{"n":"self"}],"o":{"n":"exportbuilder"}}],[11,"global","","Glboal entry builder # Examples ``` use parity_wasm::builder::module; use parity_wasm::elements::Instruction::*;",63,{"i":[{"n":"self"}],"o":{"n":"globalbuilder"}}],[11,"with_data_segment","","Add data segment to the builder",63,{"i":[{"n":"self"},{"n":"datasegment"}],"o":{"n":"self"}}],[11,"data","","Data entry builder",63,{"i":[{"n":"self"}],"o":{"n":"datasegmentbuilder"}}],[11,"build","","Build module (final step)",63,null],[11,"new","","New signature builder",64,{"o":{"n":"self"}}],[11,"with_callback","","New builder with callback function specified",64,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"with_param","","Add argument to signature builder",64,{"i":[{"n":"self"},{"n":"valuetype"}],"o":{"n":"self"}}],[11,"with_params","","Add multiple arguments to signature builder",64,{"i":[{"n":"self"},{"g":["valuetype"],"n":"vec"}],"o":{"n":"self"}}],[11,"with_return_type","","Override signature return type",64,{"i":[{"n":"self"},{"g":["valuetype"],"n":"option"}],"o":{"n":"self"}}],[11,"param","","Start build new argument",64,{"i":[{"n":"self"}],"o":{"n":"valuetypebuilder"}}],[11,"params","","Start build multiple arguments",64,{"i":[{"n":"self"}],"o":{"n":"valuetypesbuilder"}}],[11,"return_type","","Start building return type",64,{"i":[{"n":"self"}],"o":{"n":"optionalvaluetypebuilder"}}],[11,"build","","Finish current builder",64,null],[11,"build_sig","","Finish current builder returning intermediate `Signature` struct",64,{"i":[{"n":"self"}],"o":{"n":"signature"}}],[11,"with_callback","","New builder chained with specified callback",65,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"val","","Set/override of type reference",65,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[11,"build","","Finish current builder",65,null],[11,"new","","New empty functions section builder",66,{"o":{"n":"self"}}],[11,"with_callback","","New builder chained with specified callback",66,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"with_signature","","Push new signature into the builder output",66,{"i":[{"n":"self"},{"n":"signature"}],"o":{"n":"self"}}],[11,"type_ref","","Start building new signature with `TypeRefBuilder`",66,{"i":[{"n":"self"}],"o":{"n":"typerefbuilder"}}],[11,"signature","","Start building new signature with dedicated builder",66,{"i":[{"n":"self"}],"o":{"n":"signaturebuilder"}}],[11,"build","","Finalize builder spawning element",66,null],[11,"bind","","Bind signature list",66,null],[11,"with_callback","","New body (code) builder given the chain callback",67,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"with_func","","Set/override entirely with FuncBody struct",67,{"i":[{"n":"self"},{"n":"funcbody"}],"o":{"n":"self"}}],[11,"with_locals","","Extend function local list with new entries",67,{"i":[{"n":"self"},{"g":["local"],"n":"vec"}],"o":{"n":"self"}}],[11,"with_instructions","","Set code of the function",67,{"i":[{"n":"self"},{"n":"instructions"}],"o":{"n":"self"}}],[11,"build","","Finish current builder spawning resulting struct",67,null],[11,"default","","",60,{"o":{"n":"self"}}],[11,"new","","New function builder",68,{"o":{"n":"self"}}],[11,"with_callback","","New function builder with chained callback",68,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"main","","Set that this function is main entry point",68,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"signature","","Start signature builder of the function",68,{"i":[{"n":"self"}],"o":{"n":"signaturebuilder"}}],[11,"with_signature","","Override current signature entirely with new one from known struct",68,{"i":[{"n":"self"},{"n":"signature"}],"o":{"n":"self"}}],[11,"body","","Start code (body) builder",68,{"i":[{"n":"self"}],"o":{"n":"funcbodybuilder"}}],[11,"with_body","","Set body (code) for this function",68,{"i":[{"n":"self"},{"n":"funcbody"}],"o":{"n":"self"}}],[11,"build","","Finalize current builder spawning resulting struct in the callback",68,null],[11,"new","","New import builder",69,{"o":{"n":"self"}}],[11,"with_callback","","New import builder with callback (in chained context)",69,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"module","","Set/override module name",69,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"field","","Set/override field name",69,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"path","","Set/override both module name and field name",69,{"i":[{"n":"self"},{"n":"str"},{"n":"str"}],"o":{"n":"self"}}],[11,"with_external","","Set/override external mapping for this import",69,{"i":[{"n":"self"},{"n":"external"}],"o":{"n":"self"}}],[11,"external","","Start new external mapping builder",69,{"i":[{"n":"self"}],"o":{"n":"importexternalbuilder"}}],[11,"build","","Finalize current builder spawning the resulting struct",69,null],[11,"new","","New memory builder",70,{"o":{"n":"self"}}],[11,"with_callback","","New memory builder with callback (in chained context)",70,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"with_min","","Set/override minimum size",70,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[11,"with_max","","Set/override maximum size",70,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"self"}}],[11,"with_data","","Push new static region with initialized offset expression and raw bytes",70,{"i":[{"n":"self"},{"n":"u32"},{"g":["u8"],"n":"vec"}],"o":{"n":"self"}}],[11,"build","","Finalize current builder, spawning resulting struct",70,null],[11,"fmt","","",61,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",61,{"i":[{"n":"self"},{"n":"tabledefinition"}],"o":{"n":"bool"}}],[11,"ne","","",61,{"i":[{"n":"self"},{"n":"tabledefinition"}],"o":{"n":"bool"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",62,{"i":[{"n":"self"},{"n":"tableentrydefinition"}],"o":{"n":"bool"}}],[11,"ne","","",62,{"i":[{"n":"self"},{"n":"tableentrydefinition"}],"o":{"n":"bool"}}],[11,"new","","New table builder",71,{"o":{"n":"self"}}],[11,"with_callback","","New table builder with callback in chained context",71,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"with_min","","Set/override minimum length",71,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"self"}}],[11,"with_max","","Set/override maximum length",71,{"i":[{"n":"self"},{"g":["u32"],"n":"option"}],"o":{"n":"self"}}],[11,"with_element","","Generate initialization expression and element values on specified index",71,{"i":[{"n":"self"},{"n":"u32"},{"g":["u32"],"n":"vec"}],"o":{"n":"self"}}],[11,"build","","Finalize current builder spawning resulting struct",71,null],[11,"default","","",61,{"o":{"n":"self"}}],[11,"new","","New export builder",72,{"o":{"n":"self"}}],[11,"with_callback","","New export entry builder in the specified chained context",72,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"field","","Set the field name of the export entry",72,{"i":[{"n":"self"},{"n":"str"}],"o":{"n":"self"}}],[11,"with_internal","","Specify the internal module mapping for this entry",72,{"i":[{"n":"self"},{"n":"internal"}],"o":{"n":"self"}}],[11,"internal","","Start the internal builder for this export entry",72,{"i":[{"n":"self"}],"o":{"n":"exportinternalbuilder"}}],[11,"build","","Finalize export entry builder spawning the resulting struct",72,null],[11,"with_callback","","New export entry internal mapping for the chained context",73,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"func","","Map to function by index",73,null],[11,"memory","","Map to memory",73,null],[11,"table","","Map to table",73,null],[11,"global","","Map to global",73,null],[11,"new","","New global builder",74,{"o":{"n":"self"}}],[11,"with_callback","","New global builder with callback (in chained context)",74,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"with_type","","Set/override resulting global type",74,{"i":[{"n":"self"},{"n":"valuetype"}],"o":{"n":"self"}}],[11,"mutable","","Set mutabilty to true",74,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"init_expr","","Set initialization expression instruction for this global (`end` instruction will be added automatically)",74,{"i":[{"n":"self"},{"n":"instruction"}],"o":{"n":"self"}}],[11,"value_type","","Start value type builder",74,{"i":[{"n":"self"}],"o":{"n":"valuetypebuilder"}}],[11,"build","","Finalize current builder spawning resulting struct",74,null],[11,"new","","New data segment builder",75,{"o":{"n":"self"}}],[11,"with_callback","","New data segment builder inside the chain context",75,{"i":[{"n":"f"}],"o":{"n":"self"}}],[11,"offset","","Set offset initialization instruction. `End` instruction will be added automatically.",75,{"i":[{"n":"self"},{"n":"instruction"}],"o":{"n":"self"}}],[11,"value","","Set the bytes value of the segment",75,{"i":[{"n":"self"},{"g":["u8"],"n":"vec"}],"o":{"n":"self"}}],[11,"build","","Finish current builder, spawning resulting struct",75,null]],"paths":[[3,"CountedListWriter"],[3,"Unparsed"],[4,"ImportCountType"],[4,"Section"],[4,"External"],[4,"Internal"],[4,"Type"],[4,"ValueType"],[4,"BlockType"],[4,"TableElementType"],[4,"Instruction"],[4,"NameSection"],[4,"RelocationEntry"],[4,"Error"],[3,"VarUint32"],[3,"VarUint64"],[3,"VarUint7"],[3,"VarInt7"],[3,"Uint8"],[3,"VarInt32"],[3,"VarInt64"],[3,"Uint32"],[3,"Uint64"],[3,"VarUint1"],[3,"CountedList"],[3,"CountedWriter"],[3,"Module"],[3,"CustomSection"],[3,"TypeSection"],[3,"ImportSection"],[3,"FunctionSection"],[3,"TableSection"],[3,"MemorySection"],[3,"GlobalSection"],[3,"ExportSection"],[3,"CodeSection"],[3,"ElementSection"],[3,"DataSection"],[3,"FunctionType"],[3,"GlobalType"],[3,"TableType"],[3,"ResizableLimits"],[3,"MemoryType"],[3,"ImportEntry"],[3,"ExportEntry"],[3,"GlobalEntry"],[3,"Instructions"],[3,"InitExpr"],[3,"Func"],[3,"Local"],[3,"FuncBody"],[3,"ElementSegment"],[3,"DataSegment"],[3,"IndexMap"],[3,"ModuleNameSection"],[3,"FunctionNameSection"],[3,"LocalNameSection"],[3,"RelocSection"],[8,"Deserialize"],[8,"Serialize"],[3,"FunctionDefinition"],[3,"TableDefinition"],[3,"TableEntryDefinition"],[3,"ModuleBuilder"],[3,"SignatureBuilder"],[3,"TypeRefBuilder"],[3,"SignaturesBuilder"],[3,"FuncBodyBuilder"],[3,"FunctionBuilder"],[3,"ImportBuilder"],[3,"MemoryBuilder"],[3,"TableBuilder"],[3,"ExportBuilder"],[3,"ExportInternalBuilder"],[3,"GlobalBuilder"],[3,"DataSegmentBuilder"]]};
searchIndex["wasmi"] = {"doc":"wasmi","items":[[3,"Trap","wasmi","Error type which can be thrown by wasm code or by host environment.",null,null],[3,"MemoryInstance","","Runtime representation of a linear memory (or `memory` for short).",null,null],[3,"MemoryRef","","Reference to a memory (See [`MemoryInstance`] for details).",null,null],[3,"TableInstance","","Runtime representation of a table.",null,null],[3,"TableRef","","Reference to a table (See [`TableInstance`] for details).",null,null],[3,"NopExternals","","Implementation of [`Externals`] that just traps on [`invoke_index`].",null,null],[3,"RuntimeArgs","","Wrapper around slice of [`RuntimeValue`] for using it as an argument list conveniently.",null,null],[3,"ImportsBuilder","","Convenience builder of [`ImportResolver`].",null,null],[3,"ModuleInstance","","A module instance is the runtime representation of a [module][`Module`].",null,null],[3,"ModuleRef","","Reference to a [`ModuleInstance`].",null,null],[3,"NotStartedModuleRef","","Mostly instantiated [`ModuleRef`].",null,null],[3,"GlobalInstance","","Runtime representation of a global variable (or `global` for short).",null,null],[3,"GlobalRef","","Reference to a global variable (See [`GlobalInstance`] for details).",null,null],[3,"FuncInstance","","Runtime representation of a function.",null,null],[3,"FuncRef","","Reference to a function (See [`FuncInstance`] for details).",null,null],[3,"FuncInvocation","","A resumable invocation handle. This struct is returned by `FuncInstance::invoke_resumable`.",null,null],[3,"Signature","","Signature of a [function].",null,null],[3,"GlobalDescriptor","","Description of a global variable.",null,null],[3,"TableDescriptor","","Description of a table.",null,null],[3,"MemoryDescriptor","","Description of a linear memory.",null,null],[3,"Module","","Deserialized module prepared for instantiation.",null,null],[4,"TrapKind","","Error type which can be thrown by wasm code or by host environment.",null,null],[13,"Unreachable","","Wasm code executed `unreachable` opcode.",0,null],[13,"MemoryAccessOutOfBounds","","Attempt to load or store at the address which lies outside of bounds of the memory.",0,null],[13,"TableAccessOutOfBounds","","Attempt to access table element at index which lies outside of bounds.",0,null],[13,"ElemUninitialized","","Attempt to access table element which is uninitialized (i.e. `None`).",0,null],[13,"DivisionByZero","","Attempt to divide by zero.",0,null],[13,"InvalidConversionToInt","","Attempt to make a conversion to an int failed.",0,null],[13,"StackOverflow","","Stack overflow.",0,null],[13,"UnexpectedSignature","","Attempt to invoke a function with mismatching signature.",0,null],[13,"Host","","Error specified by the host.",0,null],[4,"Error","","Internal interpreter error.",null,null],[13,"Validation","","Module validation error. Might occur only at load time.",1,null],[13,"Instantiation","","Error while instantiating a module. Might occur when provided with incorrect exports (i.e. linkage failure).",1,null],[13,"Function","","Function-level error.",1,null],[13,"Table","","Table-level error.",1,null],[13,"Memory","","Memory-level error.",1,null],[13,"Global","","Global-level error.",1,null],[13,"Value","","Value-level error.",1,null],[13,"Trap","","Trap.",1,null],[13,"Host","","Custom embedder error.",1,null],[4,"RuntimeValue","","Runtime representation of a value.",null,null],[13,"I32","","Value of 32-bit signed or unsigned integer.",2,null],[13,"I64","","Value of 64-bit signed or unsigned integer.",2,null],[13,"F32","","Value of 32-bit IEEE 754-2008 floating point number.",2,null],[13,"F64","","Value of 64-bit IEEE 754-2008 floating point number.",2,null],[4,"ExternVal","","An external value is the runtime representation of an entity that can be imported or exported.",null,null],[13,"Func","","[Function][`FuncInstance`].",3,null],[13,"Table","","[Table][`TableInstance`].",3,null],[13,"Memory","","[Memory][`MemoryInstance`].",3,null],[13,"Global","","[Global][`GlobalInstance`].",3,null],[4,"ResumableError","","A resumable invocation error.",null,null],[13,"Trap","","Trap happened.",4,null],[13,"NotResumable","","The invocation is not resumable.",4,null],[13,"AlreadyStarted","","The invocation has already been started.",4,null],[4,"ValueType","","Type of a value.",null,null],[13,"I32","","32-bit signed or unsigned integer.",5,null],[13,"I64","","64-bit signed or unsigned integer.",5,null],[13,"F32","","32-bit IEEE 754-2008 floating point number.",5,null],[13,"F64","","64-bit IEEE 754-2008 floating point number.",5,null],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"memoryref"}}],[11,"fmt","","",6,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",6,{"i":[{"n":"self"}],"o":{"n":"memoryinstance"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"alloc","","Allocate a memory instance.",7,{"i":[{"n":"pages"},{"g":["pages"],"n":"option"}],"o":{"g":["memoryref","error"],"n":"result"}}],[11,"initial","","Returns number of pages this `MemoryInstance` was created with.",7,{"i":[{"n":"self"}],"o":{"n":"pages"}}],[11,"maximum","","Returns maximum amount of pages this `MemoryInstance` can grow to.",7,{"i":[{"n":"self"}],"o":{"g":["pages"],"n":"option"}}],[11,"current_size","","Returns current linear memory size.",7,{"i":[{"n":"self"}],"o":{"n":"pages"}}],[11,"get_value","","Get value from memory at given offset.",7,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["error"],"n":"result"}}],[11,"get","","Copy data from memory at given offset.",7,{"i":[{"n":"self"},{"n":"u32"},{"n":"usize"}],"o":{"g":["vec","error"],"n":"result"}}],[11,"get_into","","Copy data from given offset in the memory into `target` slice.",7,null],[11,"set","","Copy data in the memory at given offset.",7,null],[11,"set_value","","Copy value in the memory at given offset.",7,{"i":[{"n":"self"},{"n":"u32"},{"n":"t"}],"o":{"g":["error"],"n":"result"}}],[11,"grow","","Increases the size of the linear memory by given number of pages. Returns previous memory size if succeeds.",7,{"i":[{"n":"self"},{"n":"pages"}],"o":{"g":["pages","error"],"n":"result"}}],[11,"copy","","Copy contents of one memory region to another.",7,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"usize"}],"o":{"g":["error"],"n":"result"}}],[11,"copy_nonoverlapping","","Copy contents of one memory region to another (non-overlapping version).",7,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"},{"n":"usize"}],"o":{"g":["error"],"n":"result"}}],[11,"clear","","Fill the memory region with the specified value.",7,{"i":[{"n":"self"},{"n":"usize"},{"n":"u8"},{"n":"usize"}],"o":{"g":["error"],"n":"result"}}],[11,"zero","","Fill the specified memory region with zeroes.",7,{"i":[{"n":"self"},{"n":"usize"},{"n":"usize"}],"o":{"g":["error"],"n":"result"}}],[11,"with_direct_access","","Provides direct access to the underlying memory buffer.",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"with_direct_access_mut","","Provides direct mutable access to the underlying memory buffer.",7,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"r"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"moduleref"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",8,{"i":[{"n":"self"}],"o":{"n":"moduleinstance"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_func","","Get underlying function reference if this `ExternVal` contains a function, or `None` if it is some other kind.",3,{"i":[{"n":"self"}],"o":{"g":["funcref"],"n":"option"}}],[11,"as_table","","Get underlying table reference if this `ExternVal` contains a table, or `None` if it is some other kind.",3,{"i":[{"n":"self"}],"o":{"g":["tableref"],"n":"option"}}],[11,"as_memory","","Get underlying memory reference if this `ExternVal` contains a memory, or `None` if it is some other kind.",3,{"i":[{"n":"self"}],"o":{"g":["memoryref"],"n":"option"}}],[11,"as_global","","Get underlying global variable reference if this `ExternVal` contains a global, or `None` if it is some other kind.",3,{"i":[{"n":"self"}],"o":{"g":["globalref"],"n":"option"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"with_externvals","","Instantiate a module with given [external values][ExternVal] as imports.",9,{"i":[{"n":"module"},{"n":"i"}],"o":{"g":["notstartedmoduleref","error"],"n":"result"}}],[11,"new","","Instantiate a [module][`Module`].",9,{"i":[{"n":"module"},{"n":"i"}],"o":{"g":["notstartedmoduleref","error"],"n":"result"}}],[11,"invoke_export","","Invoke exported function by a name.",9,null],[11,"export_by_name","","Find export by a name.",9,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["externval"],"n":"option"}}],[11,"not_started_instance","","Returns not fully initialized instance.",10,{"i":[{"n":"self"}],"o":{"n":"moduleref"}}],[11,"run_start","","Executes `start` function (if any) and returns fully instantiated module.",10,{"i":[{"n":"self"},{"n":"e"}],"o":{"g":["moduleref","trap"],"n":"result"}}],[11,"assert_no_start","","Returns fully instantiated module without running `start` function.",10,{"i":[{"n":"self"}],"o":{"n":"moduleref"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"tableref"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",11,{"i":[{"n":"self"}],"o":{"n":"tableinstance"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"alloc","","Allocate a table instance.",12,{"i":[{"n":"u32"},{"g":["u32"],"n":"option"}],"o":{"g":["tableref","error"],"n":"result"}}],[11,"initial_size","","Returns size this table was created with.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"maximum_size","","Returns maximum size `TableInstance` can grow to.",12,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"current_size","","Returns current size of the table.",12,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"grow","","Increases the size of the table by given number of elements.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["error"],"n":"result"}}],[11,"get","","Get the specific value in the table",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["option","error"],"n":"result"}}],[11,"set","","Set the table element to the specified function.",12,{"i":[{"n":"self"},{"n":"u32"},{"g":["funcref"],"n":"option"}],"o":{"g":["error"],"n":"result"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"runtimevalue"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"runtimevalue"}],"o":{"n":"bool"}}],[11,"ne","","",2,{"i":[{"n":"self"},{"n":"runtimevalue"}],"o":{"n":"bool"}}],[11,"default","","Creates new default value of given type.",2,{"i":[{"n":"valuetype"}],"o":{"n":"self"}}],[11,"decode_f32","","Creates new value by interpreting passed u32 as f32.",2,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[11,"decode_f64","","Creates new value by interpreting passed u64 as f64.",2,{"i":[{"n":"u64"}],"o":{"n":"self"}}],[11,"value_type","","Get variable type for this value.",2,{"i":[{"n":"self"}],"o":{"n":"valuetype"}}],[11,"try_into","","Returns `T` if this particular [`RuntimeValue`] contains appropriate type.",2,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"from","","",2,{"i":[{"n":"i8"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"i16"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"i32"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"i64"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"u8"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"u16"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"u32"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"u64"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"f32"}],"o":{"n":"self"}}],[11,"from","","",2,{"i":[{"n":"f64"}],"o":{"n":"self"}}],[11,"fmt","","",13,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",13,null],[11,"as_ref","","",13,null],[11,"nth_checked","","Extract argument by index `idx`.",13,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["trap"],"n":"result"}}],[11,"nth_value_checked","","Extract argument as a [`RuntimeValue`] by index `idx`.",13,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["runtimevalue","trap"],"n":"result"}}],[11,"nth","","Extract argument by index `idx`.",13,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"t"}}],[11,"len","","Total number of arguments",13,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"invoke_index","","",14,{"i":[{"n":"self"},{"n":"usize"},{"n":"runtimeargs"}],"o":{"g":["option","trap"],"n":"result"}}],[11,"default","","",15,{"o":{"n":"self"}}],[11,"new","","Create an empty `ImportsBuilder`.",15,{"o":{"n":"importsbuilder"}}],[11,"with_resolver","","Register an resolver by a name.",15,{"i":[{"n":"self"},{"n":"n"},{"n":"moduleimportresolver"}],"o":{"n":"self"}}],[11,"push_resolver","","Register an resolver by a name.",15,{"i":[{"n":"self"},{"n":"n"},{"n":"moduleimportresolver"}]}],[11,"resolve_func","","",15,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"signature"}],"o":{"g":["funcref","error"],"n":"result"}}],[11,"resolve_global","","",15,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"globaldescriptor"}],"o":{"g":["globalref","error"],"n":"result"}}],[11,"resolve_memory","","",15,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"memorydescriptor"}],"o":{"g":["memoryref","error"],"n":"result"}}],[11,"resolve_table","","",15,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"tabledescriptor"}],"o":{"g":["tableref","error"],"n":"result"}}],[11,"resolve_func","","",8,{"i":[{"n":"self"},{"n":"str"},{"n":"signature"}],"o":{"g":["funcref","error"],"n":"result"}}],[11,"resolve_global","","",8,{"i":[{"n":"self"},{"n":"str"},{"n":"globaldescriptor"}],"o":{"g":["globalref","error"],"n":"result"}}],[11,"resolve_memory","","",8,{"i":[{"n":"self"},{"n":"str"},{"n":"memorydescriptor"}],"o":{"g":["memoryref","error"],"n":"result"}}],[11,"resolve_table","","",8,{"i":[{"n":"self"},{"n":"str"},{"n":"tabledescriptor"}],"o":{"g":["tableref","error"],"n":"result"}}],[11,"clone","","",16,{"i":[{"n":"self"}],"o":{"n":"globalref"}}],[11,"fmt","","",16,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",16,{"i":[{"n":"self"}],"o":{"n":"globalinstance"}}],[11,"fmt","","",17,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"alloc","","Allocate a global variable instance.",17,{"i":[{"n":"runtimevalue"},{"n":"bool"}],"o":{"n":"globalref"}}],[11,"set","","Change the value of this global variable.",17,{"i":[{"n":"self"},{"n":"runtimevalue"}],"o":{"g":["error"],"n":"result"}}],[11,"get","","Get the value of this global variable.",17,{"i":[{"n":"self"}],"o":{"n":"runtimevalue"}}],[11,"is_mutable","","Returns if this global variable is mutable.",17,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"value_type","","Returns value type of this global variable.",17,{"i":[{"n":"self"}],"o":{"n":"valuetype"}}],[11,"clone","","",18,{"i":[{"n":"self"}],"o":{"n":"funcref"}}],[11,"fmt","","",18,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"deref","","",18,{"i":[{"n":"self"}],"o":{"n":"funcinstance"}}],[11,"fmt","","",19,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"alloc_host","","Allocate a function instance for a host function.",19,{"i":[{"n":"signature"},{"n":"usize"}],"o":{"n":"funcref"}}],[11,"signature","","Returns [signature] of this function instance.",19,{"i":[{"n":"self"}],"o":{"n":"signature"}}],[11,"invoke","","Invoke this function.",19,null],[11,"invoke_resumable","","Invoke the function, get a resumable handle. This handle can then be used to [`start_execution`]. If a Host trap happens, caller can use [`resume_execution`] to feed the expected return value back in, and then continue the execution.",19,null],[11,"fmt","","",4,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"from","","",4,{"i":[{"n":"trap"}],"o":{"n":"self"}}],[11,"is_resumable","","Whether this invocation is currently resumable.",20,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"resumable_value_type","","If the invocation is resumable, the expected return value type to be feed back in.",20,{"i":[{"n":"self"}],"o":{"g":["valuetype"],"n":"option"}}],[11,"start_execution","","Start the invocation execution.",20,{"i":[{"n":"self"},{"n":"e"}],"o":{"g":["option","resumableerror"],"n":"result"}}],[11,"resume_execution","","Resume an execution if a previous trap of Host kind happened.",20,{"i":[{"n":"self"},{"g":["runtimevalue"],"n":"option"},{"n":"e"}],"o":{"g":["option","resumableerror"],"n":"result"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"signature"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"signature"}],"o":{"n":"bool"}}],[11,"ne","","",21,{"i":[{"n":"self"},{"n":"signature"}],"o":{"n":"bool"}}],[11,"new","","Creates new signature with givens parameter types and optional return type.",21,{"i":[{"n":"c"},{"g":["valuetype"],"n":"option"}],"o":{"n":"signature"}}],[11,"params","","Returns parameter types of this signature.",21,null],[11,"return_type","","Returns return type of this signature.",21,{"i":[{"n":"self"}],"o":{"g":["valuetype"],"n":"option"}}],[11,"clone","","",5,{"i":[{"n":"self"}],"o":{"n":"valuetype"}}],[11,"fmt","","",5,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",5,{"i":[{"n":"self"},{"n":"valuetype"}],"o":{"n":"bool"}}],[11,"value_type","","Returns [`ValueType`] of the requested global.",22,{"i":[{"n":"self"}],"o":{"n":"valuetype"}}],[11,"is_mutable","","Returns whether the requested global mutable.",22,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"initial","","Returns initial size of the requested table.",23,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"maximum","","Returns maximum size of the requested table.",23,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[11,"initial","","Returns initial size (in pages) of the requested memory.",24,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"maximum","","Returns maximum size (in pages) of the requested memory.",24,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"option"}}],[0,"memory_units","","WebAssembly-specific sizes and units.",null,null],[3,"Words","wasmi::memory_units","Memory size specified in `wasm32` words.",null,null],[12,"0","","",25,null],[3,"Pages","","Memory size specified in WebAssembly [memory pages][memory page].",null,null],[12,"0","","",26,null],[3,"Bytes","","Memory size specified in bytes.",null,null],[12,"0","","",27,null],[8,"ByteSize","","A trait defining the size, in bytes, of one unit of `Self`.",null,null],[10,"byte_size","","The size, in bytes, of a single unit of `Self`.",28,{"o":{"n":"bytes"}}],[8,"RoundUpTo","","A trait defining round up conversion between various memory units.",null,null],[10,"round_up_to","","Returns minimum number of `T` to fit amount of space occupied by `self`.",29,{"i":[{"n":"self"}],"o":{"n":"t"}}],[5,"size_of","","Returns the size of a type in [`Bytes`].",null,{"o":{"n":"bytes"}}],[17,"LINEAR_MEMORY_PAGE_SIZE","wasmi","Size of a page of [linear memory][`MemoryInstance`] - 64KiB.",null,null],[8,"FromRuntimeValue","","Trait for creating value from a [`RuntimeValue`].",null,null],[10,"from_runtime_value","","Create a value of type `Self` from a given [`RuntimeValue`].",30,{"i":[{"n":"runtimevalue"}],"o":{"n":"option"}}],[8,"Externals","","Trait that allows to implement host functions.",null,null],[10,"invoke_index","","Perform invoke of a host function by specified `index`.",31,{"i":[{"n":"self"},{"n":"usize"},{"n":"runtimeargs"}],"o":{"g":["option","trap"],"n":"result"}}],[8,"HostError","","Trait that allows the host to return custom error.",null,null],[8,"ModuleImportResolver","","Version of [`ImportResolver`] specialized for a single module.",null,null],[11,"resolve_func","","Resolve a function.",32,{"i":[{"n":"self"},{"n":"str"},{"n":"signature"}],"o":{"g":["funcref","error"],"n":"result"}}],[11,"resolve_global","","Resolve a global variable.",32,{"i":[{"n":"self"},{"n":"str"},{"n":"globaldescriptor"}],"o":{"g":["globalref","error"],"n":"result"}}],[11,"resolve_memory","","Resolve a memory.",32,{"i":[{"n":"self"},{"n":"str"},{"n":"memorydescriptor"}],"o":{"g":["memoryref","error"],"n":"result"}}],[11,"resolve_table","","Resolve a table.",32,{"i":[{"n":"self"},{"n":"str"},{"n":"tabledescriptor"}],"o":{"g":["tableref","error"],"n":"result"}}],[8,"ImportResolver","","Resolver of a module's dependencies.",null,null],[10,"resolve_func","","Resolve a function.",33,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"signature"}],"o":{"g":["funcref","error"],"n":"result"}}],[10,"resolve_global","","Resolve a global variable.",33,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"globaldescriptor"}],"o":{"g":["globalref","error"],"n":"result"}}],[10,"resolve_memory","","Resolve a memory.",33,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"memorydescriptor"}],"o":{"g":["memoryref","error"],"n":"result"}}],[10,"resolve_table","","Resolve a table.",33,{"i":[{"n":"self"},{"n":"str"},{"n":"str"},{"n":"tabledescriptor"}],"o":{"g":["tableref","error"],"n":"result"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"new","","Create new trap.",34,{"i":[{"n":"trapkind"}],"o":{"n":"trap"}}],[11,"kind","","Returns kind of this trap.",34,{"i":[{"n":"self"}],"o":{"n":"trapkind"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",34,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"is_host","","Whether this trap is specified by the host.",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"as_host_error","","Returns [`HostError`] if this `Error` represents some host error.",1,{"i":[{"n":"self"}],"o":{"g":["hosterror"],"n":"option"}}],[11,"into","","",1,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"description","","",1,{"i":[{"n":"self"}],"o":{"n":"str"}}],[11,"from","","",1,{"i":[{"n":"u"}],"o":{"n":"self"}}],[11,"from","","",34,{"i":[{"n":"u"}],"o":{"n":"self"}}],[11,"from","","",1,{"i":[{"n":"trap"}],"o":{"n":"error"}}],[11,"from","","",34,{"i":[{"n":"trapkind"}],"o":{"n":"trap"}}],[11,"from_parity_wasm_module","","Create `Module` from `parity_wasm::elements::Module`.",35,{"i":[{"n":"module"}],"o":{"g":["module","error"],"n":"result"}}],[11,"deny_floating_point","","Fail if the module contains any floating-point operations",35,{"i":[{"n":"self"}],"o":{"g":["error"],"n":"result"}}],[11,"from_buffer","","Create `Module` from a given buffer.",35,{"i":[{"n":"b"}],"o":{"g":["module","error"],"n":"result"}}],[11,"sub","wasmi::memory_units","",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pages"}}],[11,"sub","","",25,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"words"}}],[11,"sub","","",27,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bytes"}}],[11,"partial_cmp","","",26,{"i":[{"n":"self"},{"n":"pages"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",26,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"le","","",26,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"gt","","",26,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"ge","","",26,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",27,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",27,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"le","","",27,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"gt","","",27,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"ge","","",27,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"partial_cmp","","",25,{"i":[{"n":"self"},{"n":"words"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",25,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"le","","",25,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"gt","","",25,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"ge","","",25,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"clone","","",25,{"i":[{"n":"self"}],"o":{"n":"words"}}],[11,"clone","","",27,{"i":[{"n":"self"}],"o":{"n":"bytes"}}],[11,"clone","","",26,{"i":[{"n":"self"}],"o":{"n":"pages"}}],[11,"add","","",27,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bytes"}}],[11,"add","","",25,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"words"}}],[11,"add","","",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pages"}}],[11,"eq","","",27,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"ne","","",27,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"bool"}}],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"ne","","",26,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"bool"}}],[11,"eq","","",25,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"ne","","",25,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"bool"}}],[11,"div","","",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pages"}}],[11,"div","","",27,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bytes"}}],[11,"div","","",25,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"words"}}],[11,"from","","",27,{"i":[{"n":"pages"}],"o":{"n":"bytes"}}],[11,"from","","",27,{"i":[{"n":"words"}],"o":{"n":"bytes"}}],[11,"from","","",27,{"i":[{"n":"pages"}],"o":{"n":"bytes"}}],[11,"from","","",27,{"i":[{"n":"words"}],"o":{"n":"bytes"}}],[11,"byte_size","","",27,{"o":{"n":"bytes"}}],[11,"byte_size","","",25,{"o":{"n":"bytes"}}],[11,"byte_size","","",26,{"o":{"n":"bytes"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",27,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"fmt","","",25,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"g":["error"],"n":"result"}}],[11,"mul","","",26,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"pages"}}],[11,"mul","","",25,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"words"}}],[11,"mul","","",27,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"bytes"}}],[11,"cmp","","",26,{"i":[{"n":"self"},{"n":"pages"}],"o":{"n":"ordering"}}],[11,"cmp","","",25,{"i":[{"n":"self"},{"n":"words"}],"o":{"n":"ordering"}}],[11,"cmp","","",27,{"i":[{"n":"self"},{"n":"bytes"}],"o":{"n":"ordering"}}],[11,"downcast_ref","wasmi","Attempt to downcast this `HostError` to a concrete type by reference.",36,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"downcast_mut","","Attempt to downcast this `HostError` to a concrete type by mutable reference.",36,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"resolve_func","","Resolve a function.",32,{"i":[{"n":"self"},{"n":"str"},{"n":"signature"}],"o":{"g":["funcref","error"],"n":"result"}}],[11,"resolve_global","","Resolve a global variable.",32,{"i":[{"n":"self"},{"n":"str"},{"n":"globaldescriptor"}],"o":{"g":["globalref","error"],"n":"result"}}],[11,"resolve_memory","","Resolve a memory.",32,{"i":[{"n":"self"},{"n":"str"},{"n":"memorydescriptor"}],"o":{"g":["memoryref","error"],"n":"result"}}],[11,"resolve_table","","Resolve a table.",32,{"i":[{"n":"self"},{"n":"str"},{"n":"tabledescriptor"}],"o":{"g":["tableref","error"],"n":"result"}}]],"paths":[[4,"TrapKind"],[4,"Error"],[4,"RuntimeValue"],[4,"ExternVal"],[4,"ResumableError"],[4,"ValueType"],[3,"MemoryRef"],[3,"MemoryInstance"],[3,"ModuleRef"],[3,"ModuleInstance"],[3,"NotStartedModuleRef"],[3,"TableRef"],[3,"TableInstance"],[3,"RuntimeArgs"],[3,"NopExternals"],[3,"ImportsBuilder"],[3,"GlobalRef"],[3,"GlobalInstance"],[3,"FuncRef"],[3,"FuncInstance"],[3,"FuncInvocation"],[3,"Signature"],[3,"GlobalDescriptor"],[3,"TableDescriptor"],[3,"MemoryDescriptor"],[3,"Words"],[3,"Pages"],[3,"Bytes"],[8,"ByteSize"],[8,"RoundUpTo"],[8,"FromRuntimeValue"],[8,"Externals"],[8,"ModuleImportResolver"],[8,"ImportResolver"],[3,"Trap"],[3,"Module"],[8,"HostError"]]};
initSearch(searchIndex);
